Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2021.1.1 (win64) Build 3286242 Wed Jul 28 13:10:47 MDT 2021
| Date         : Fri Dec 17 02:34:12 2021
| Host         : DESKTOP-J45FL4K running 64-bit major release  (build 9200)
| Command      : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
| Design       : design_1_wrapper
| Device       : xczu7ev-ffvc1156-2-e
| Speed File   : -2
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 249
+--------+----------+------------------------+------------+
| Rule   | Severity | Description            | Violations |
+--------+----------+------------------------+------------+
| DPIP-2 | Warning  | Input pipelining       | 61         |
| DPOP-3 | Warning  | PREG Output pipelining | 77         |
| DPOP-4 | Warning  | MREG Output pipelining | 111        |
+--------+----------+------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-2#1 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#2 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#3 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#4 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#5 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#6 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#7 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#8 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#9 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#10 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#11 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#12 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#13 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#14 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#15 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#16 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#17 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#18 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#19 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#20 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#21 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#22 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#23 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#24 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#25 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#26 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#27 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#28 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#29 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#30 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#31 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#32 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#33 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#34 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#35 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#36 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#37 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#38 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#39 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#40 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#41 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#42 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#43 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#44 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#45 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#46 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#47 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#48 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#49 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#50 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#51 Warning
Input pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_ln3_reg_2466_reg input design_1_i/creat_mec_matrix_0/inst/mul_ln3_reg_2466_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#52 Warning
Input pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#53 Warning
Input pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#54 Warning
Input pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#55 Warning
Input pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#56 Warning
Input pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#57 Warning
Input pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#58 Warning
Input pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#59 Warning
Input pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#60 Warning
Input pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout input design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-2#61 Warning
Input pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0 input design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-3#1 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#2 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#3 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#4 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#5 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#6 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#7 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#8 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#9 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#10 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#11 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#12 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#13 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#14 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#15 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#16 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#17 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#18 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#19 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#20 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#21 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#22 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#23 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#24 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#25 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#26 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#27 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#28 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#29 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#30 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#31 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#32 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#33 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#34 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#35 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#36 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#37 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#38 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#39 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#40 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#41 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#42 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#43 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#44 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#45 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#46 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#47 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#48 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#49 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#50 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#51 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#52 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#53 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#54 Warning
PREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#55 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#56 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#57 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#58 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#59 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#60 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#61 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#62 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#63 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#64 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#65 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#66 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#67 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#68 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#69 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#70 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#71 Warning
PREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#72 Warning
PREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#73 Warning
PREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__0 output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#74 Warning
PREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__1 output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#75 Warning
PREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#76 Warning
PREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0 output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-3#77 Warning
PREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__1 output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-4#1 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul5_mid2_reg_2731_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/mul5_mid2_reg_2731_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#2 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul6_reg_2761_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/mul6_reg_2761_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#3 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#4 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#5 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#6 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#7 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#8 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#9 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#10 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#11 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#12 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#13 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#14 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#15 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#16 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#17 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#18 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#19 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#20 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#21 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#22 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#23 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#24 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#25 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#26 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#27 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#28 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#29 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#30 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#31 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#32 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#33 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#34 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#35 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#36 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#37 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#38 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#39 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#40 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#41 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#42 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#43 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#44 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#45 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#46 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#47 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#48 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#49 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#50 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#51 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#52 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#53 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#54 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#55 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#56 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#57 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#58 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#59 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#60 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#61 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#62 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#63 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#64 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#65 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#66 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#67 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#68 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#69 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_ln3_2_reg_2592_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_ln3_2_reg_2592_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#70 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/mul_ln3_reg_2466_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_ln3_reg_2466_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#71 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/tmp1_0_reg_2817_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_0_reg_2817_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#72 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/tmp1_11_reg_2950_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_11_reg_2950_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#73 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/tmp1_14_reg_2991_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_14_reg_2991_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#74 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/tmp1_18_reg_3036_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_18_reg_3036_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#75 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/tmp1_1_reg_2828_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_1_reg_2828_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#76 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/tmp1_20_reg_3063_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_20_reg_3063_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#77 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/tmp1_5_reg_2879_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_5_reg_2879_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#78 Warning
MREG Output pipelining  
DSP design_1_i/creat_mec_matrix_0/inst/tmp1_7_reg_2899_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_7_reg_2899_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#79 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#80 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#81 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#82 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#83 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#84 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#85 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#86 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#87 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#88 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#89 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#90 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#91 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#92 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#93 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#94 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#95 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#96 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#97 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#98 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_ln3_2_reg_718_reg multiplier stage design_1_i/extend_matrix_0/inst/mul_ln3_2_reg_718_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#99 Warning
MREG Output pipelining  
DSP design_1_i/extend_matrix_0/inst/mul_ln3_6_reg_728_reg multiplier stage design_1_i/extend_matrix_0/inst/mul_ln3_6_reg_728_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#100 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U92/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg multiplier stage design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U92/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#101 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U93/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg multiplier stage design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U93/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#102 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U94/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg multiplier stage design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U94/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#103 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U96/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg multiplier stage design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U96/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#104 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U97/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg multiplier stage design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U97/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#105 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U98/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg multiplier stage design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U98/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#106 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout multiplier stage design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#107 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__0 multiplier stage design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#108 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__1 multiplier stage design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#109 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout multiplier stage design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#110 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0 multiplier stage design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-4#111 Warning
MREG Output pipelining  
DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__1 multiplier stage design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>


