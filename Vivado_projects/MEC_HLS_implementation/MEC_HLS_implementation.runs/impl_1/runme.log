
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace



****** Vivado v2021.1.1 (64-bit)
  **** SW Build 3286242 on Wed Jul 28 13:10:47 MDT 2021
  **** IP Build 3279568 on Wed Jul 28 16:48:48 MDT 2021
    ** Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vitis_hls_projects/extend_matrix/extend_matrix_soln/impl/ip'.
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vitis_hls_projects/mul_v2/mul_v2/solution1/impl'.
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vitis_hls_projects/mul_mec_matrix/mul_mec_matrix/solution1/impl/ip'.
INFO: [IP_Flow 19-1700] Loaded user IP repository 'x:/temp/mul_v5/solution1/impl/ip'.
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vitis_hls_projects/creat_mec_matrix/creat_mec_matrix/solution1/impl/ip'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'G:/dev_tools/xilinx/Vivado/2021.1/data/ip'.
WARNING: [IP_Flow 19-4995] The host OS only allows 260 characters in a normal path. The IP cache path is more than 80 characters. If you experience issues with IP caching, please consider changing the IP cache to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. 
Current IP cache path is C:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.cache/ip 
Command: link_design -top design_1_wrapper -part xczu7ev-ffvc1156-2-e
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xczu7ev-ffvc1156-2-e
Netlist sorting complete. Time (s): cpu = 00:00:02 ; elapsed = 00:00:03 . Memory (MB): peak = 1931.480 ; gain = 15.820
INFO: [Netlist 29-17] Analyzing 8168 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 2 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2021.1.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Finished Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_zynq_ultra_ps_e_0_0/design_1_zynq_ultra_ps_e_0_0.xdc] for cell 'design_1_i/zynq_ultra_ps_e_0/inst'
Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0_board.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Finished Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0_board.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Finished Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_rst_ps8_0_99M_0/design_1_rst_ps8_0_99M_0.xdc] for cell 'design_1_i/rst_ps8_0_99M/U0'
Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst'
Finished Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_auto_ds_0/design_1_auto_ds_0_clocks.xdc] for cell 'design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst'
Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_auto_ds_1/design_1_auto_ds_1_clocks.xdc] for cell 'design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst'
Finished Parsing XDC File [c:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.gen/sources_1/bd/design_1/ip/design_1_auto_ds_1/design_1_auto_ds_1_clocks.xdc] for cell 'design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst'
INFO: [Project 1-1714] 80 XPM XDC files have been applied to the design.
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.048 . Memory (MB): peak = 2330.438 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 317 instances were transformed.
  DSP48E2 => DSP48E2 (DSP_ALU, DSP_A_B_DATA, DSP_C_DATA, DSP_MULTIPLIER, DSP_M_DATA, DSP_OUTPUT, DSP_PREADD, DSP_PREADD_DATA): 140 instances
  RAM16X1D => RAM32X1D (RAMD32(x2)): 3 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 9 instances
  RAM32M16 => RAM32M16 (RAMD32(x14), RAMS32(x2)): 161 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 4 instances

15 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:40 ; elapsed = 00:00:43 . Memory (MB): peak = 2330.438 ; gain = 1046.934
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu7ev'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu7ev'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2347.457 ; gain = 17.020

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 14f266111

Time (s): cpu = 00:00:16 ; elapsed = 00:00:10 . Memory (MB): peak = 2885.262 ; gain = 537.805

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 90 inverter(s) to 5738 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 856b89b8

Time (s): cpu = 00:00:13 ; elapsed = 00:00:09 . Memory (MB): peak = 3108.383 ; gain = 0.840
INFO: [Opt 31-389] Phase Retarget created 38 cells and removed 421 cells
INFO: [Opt 31-1021] In phase Retarget, 114 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: f4ce8c59

Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 3108.383 ; gain = 0.840
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 36 cells
INFO: [Opt 31-1021] In phase Constant propagation, 134 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 61eb9758

Time (s): cpu = 00:00:17 ; elapsed = 00:00:14 . Memory (MB): peak = 3108.383 ; gain = 0.840
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 86 cells
INFO: [Opt 31-1021] In phase Sweep, 293 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
INFO: [Opt 31-1077] Phase BUFG optimization inserted 0 global clock buffer(s) for CLOCK_LOW_FANOUT.
Phase 4 BUFG optimization | Checksum: 61eb9758

Time (s): cpu = 00:00:21 ; elapsed = 00:00:17 . Memory (MB): peak = 3108.383 ; gain = 0.840
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 61eb9758

Time (s): cpu = 00:00:21 ; elapsed = 00:00:18 . Memory (MB): peak = 3108.383 ; gain = 0.840
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 61eb9758

Time (s): cpu = 00:00:22 ; elapsed = 00:00:19 . Memory (MB): peak = 3108.383 ; gain = 0.840
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 126 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |              38  |             421  |                                            114  |
|  Constant propagation         |               0  |              36  |                                            134  |
|  Sweep                        |               0  |              86  |                                            293  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                            126  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.301 . Memory (MB): peak = 3108.383 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 10b3a4ec0

Time (s): cpu = 00:00:28 ; elapsed = 00:00:24 . Memory (MB): peak = 3108.383 ; gain = 0.840

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 5 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 0 newly gated: 2 Total Ports: 10
Ending PowerOpt Patch Enables Task | Checksum: eadad29d

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.686 . Memory (MB): peak = 4454.613 ; gain = 0.000
Ending Power Optimization Task | Checksum: eadad29d

Time (s): cpu = 00:00:54 ; elapsed = 00:00:30 . Memory (MB): peak = 4454.613 ; gain = 1346.230

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: eadad29d

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 4454.613 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.135 . Memory (MB): peak = 4454.613 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: e6baa03b

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.135 . Memory (MB): peak = 4454.613 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
42 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:01:42 ; elapsed = 00:01:08 . Memory (MB): peak = 4454.613 ; gain = 2124.176
INFO: [Timing 38-480] Writing timing data to binary archive.
INFO: [Common 17-1381] The checkpoint 'C:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:30 ; elapsed = 00:00:18 . Memory (MB): peak = 4454.613 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file C:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:59 ; elapsed = 00:00:40 . Memory (MB): peak = 4729.895 ; gain = 275.281
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu7ev'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu7ev'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.047 . Memory (MB): peak = 4729.895 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 7ebce5dd

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.091 . Memory (MB): peak = 4729.895 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.046 . Memory (MB): peak = 4729.895 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: b19c5416

Time (s): cpu = 00:00:16 ; elapsed = 00:00:11 . Memory (MB): peak = 4729.895 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: e6fb0dee

Time (s): cpu = 00:01:04 ; elapsed = 00:00:44 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: e6fb0dee

Time (s): cpu = 00:01:04 ; elapsed = 00:00:45 . Memory (MB): peak = 5375.117 ; gain = 645.223
Phase 1 Placer Initialization | Checksum: e6fb0dee

Time (s): cpu = 00:01:05 ; elapsed = 00:00:45 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 2 Global Placement

Phase 2.1 Floorplanning

Phase 2.1.1 Partition Driven Placement

Phase 2.1.1.1 PBP: Partition Driven Placement
Phase 2.1.1.1 PBP: Partition Driven Placement | Checksum: cf06cebb

Time (s): cpu = 00:02:10 ; elapsed = 00:01:24 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 2.1.1.2 PBP: Clock Region Placement
Phase 2.1.1.2 PBP: Clock Region Placement | Checksum: be063e0c

Time (s): cpu = 00:02:13 ; elapsed = 00:01:27 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 2.1.1.3 PBP: Compute Congestion
Phase 2.1.1.3 PBP: Compute Congestion | Checksum: be063e0c

Time (s): cpu = 00:02:14 ; elapsed = 00:01:28 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 2.1.1.4 PBP: UpdateTiming
Phase 2.1.1.4 PBP: UpdateTiming | Checksum: 1a4a64346

Time (s): cpu = 00:02:23 ; elapsed = 00:01:35 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 2.1.1.5 PBP: Add part constraints
Phase 2.1.1.5 PBP: Add part constraints | Checksum: 1a4a64346

Time (s): cpu = 00:02:25 ; elapsed = 00:01:36 . Memory (MB): peak = 5375.117 ; gain = 645.223
Phase 2.1.1 Partition Driven Placement | Checksum: 1a4a64346

Time (s): cpu = 00:02:25 ; elapsed = 00:01:36 . Memory (MB): peak = 5375.117 ; gain = 645.223
Phase 2.1 Floorplanning | Checksum: 15d07f964

Time (s): cpu = 00:02:25 ; elapsed = 00:01:36 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 15d07f964

Time (s): cpu = 00:02:25 ; elapsed = 00:01:36 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: 15d07f964

Time (s): cpu = 00:02:26 ; elapsed = 00:01:37 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 2.4 Global Placement Core

Phase 2.4.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 818 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-1138] End 1 Pass. Optimized 328 nets or LUTs. Breaked 0 LUT, combined 328 existing LUTs and moved 0 existing LUT
INFO: [Physopt 32-1030] Pass 1. Identified 3 candidate driver sets for equivalent driver rewiring.
INFO: [Physopt 32-661] Optimized 3 nets.  Re-placed 55 instances.
INFO: [Physopt 32-775] End 1 Pass. Optimized 3 nets or cells. Created 0 new cell, deleted 0 existing cell and moved 55 existing cells
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.539 . Memory (MB): peak = 5375.117 ; gain = 0.000
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.046 . Memory (MB): peak = 5375.117 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            328  |                   328  |           0  |           1  |  00:00:01  |
|  Retime                                           |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Equivalent Driver Rewiring                       |            0  |              0  |                     3  |           0  |           1  |  00:00:02  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:01  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |            328  |                   331  |           0  |           5  |  00:00:04  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.4.1 Physical Synthesis In Placer | Checksum: ce1815b2

Time (s): cpu = 00:04:42 ; elapsed = 00:03:10 . Memory (MB): peak = 5375.117 ; gain = 645.223
Phase 2.4 Global Placement Core | Checksum: 18bb7b993

Time (s): cpu = 00:04:56 ; elapsed = 00:03:20 . Memory (MB): peak = 5375.117 ; gain = 645.223
Phase 2 Global Placement | Checksum: 18bb7b993

Time (s): cpu = 00:04:56 ; elapsed = 00:03:20 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: ddfecb35

Time (s): cpu = 00:05:07 ; elapsed = 00:03:27 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1414527a6

Time (s): cpu = 00:05:28 ; elapsed = 00:03:44 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 3.3 Small Shape DP

Phase 3.3.1 Small Shape Clustering
Phase 3.3.1 Small Shape Clustering | Checksum: 875da310

Time (s): cpu = 00:05:38 ; elapsed = 00:03:52 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 3.3.2 Flow Legalize Slice Clusters
Phase 3.3.2 Flow Legalize Slice Clusters | Checksum: 10c4d5e12

Time (s): cpu = 00:05:40 ; elapsed = 00:03:54 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 3.3.3 Slice Area Swap
Phase 3.3.3 Slice Area Swap | Checksum: d70e7fe1

Time (s): cpu = 00:05:51 ; elapsed = 00:04:04 . Memory (MB): peak = 5375.117 ; gain = 645.223
Phase 3.3 Small Shape DP | Checksum: f4cb98e6

Time (s): cpu = 00:06:13 ; elapsed = 00:04:17 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 3.4 Re-assign LUT pins
Phase 3.4 Re-assign LUT pins | Checksum: aef5f9ad

Time (s): cpu = 00:06:20 ; elapsed = 00:04:26 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 3.5 Pipeline Register Optimization
Phase 3.5 Pipeline Register Optimization | Checksum: a42c64e7

Time (s): cpu = 00:06:21 ; elapsed = 00:04:27 . Memory (MB): peak = 5375.117 ; gain = 645.223
Phase 3 Detail Placement | Checksum: a42c64e7

Time (s): cpu = 00:06:22 ; elapsed = 00:04:27 . Memory (MB): peak = 5375.117 ; gain = 645.223

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: f1dd7268

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=4.368 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 14c92a05a

Time (s): cpu = 00:00:06 ; elapsed = 00:00:03 . Memory (MB): peak = 5424.680 ; gain = 0.000
INFO: [Place 46-35] Processed net design_1_i/rst_ps8_0_99M/U0/peripheral_aresetn[0], inserted BUFG to drive 5416 loads.
INFO: [Place 46-45] Replicated bufg driver design_1_i/rst_ps8_0_99M/U0/ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_replica
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1107_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1111_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1103_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1087_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1091_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1256_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1083_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1131_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1099_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1143_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1127_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1167_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_write/buff_wdata/grp_fu_1151_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1183_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1067_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1326_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1312_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1284_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1270_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1298_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1079_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1123_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1119_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1095_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rreq/grp_fu_1115_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rreq/grp_fu_1163_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rreq/grp_fu_1175_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rreq/grp_fu_1071_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rreq/grp_fu_1205_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rreq/grp_fu_1191_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_write/buff_wdata/grp_fu_1075_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_write/buff_wdata/grp_fu_1012_ce, inserted BUFG to drive 2083 loads.
INFO: [Place 46-35] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_write/buff_wdata/grp_fu_1000_ce, inserted BUFG to drive 2114 loads.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_write/buff_wdata/grp_fu_1147_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_write/buff_wdata/grp_fu_1187_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_write/buff_wdata/grp_fu_962_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1179_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_write/buff_wdata/grp_fu_1135_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rreq/grp_fu_1171_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_write/buff_wdata/grp_fu_1139_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rdata/grp_fu_1155_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/creat_mec_matrix_0/inst/gmem_m_axi_U/bus_read/rs_rreq/grp_fu_1159_ce, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 43 candidate nets. Inserted BUFG: 29, Replicated BUFG Driver: 1, Skipped due to Placement/Routing Conflicts: 14, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 1f9c11db7

Time (s): cpu = 00:00:21 ; elapsed = 00:00:17 . Memory (MB): peak = 5435.023 ; gain = 10.344
Phase 4.1.1.1 BUFG Insertion | Checksum: 16f2f14db

Time (s): cpu = 00:07:38 ; elapsed = 00:05:27 . Memory (MB): peak = 5435.023 ; gain = 705.129

Phase 4.1.1.2 Post Placement Timing Optimization
INFO: [Place 30-746] Post Placement Timing Summary WNS=4.368. For the most accurate timing information please run report_timing.
Phase 4.1.1.2 Post Placement Timing Optimization | Checksum: 16d1bf5eb

Time (s): cpu = 00:07:40 ; elapsed = 00:05:28 . Memory (MB): peak = 5435.023 ; gain = 705.129

Time (s): cpu = 00:07:40 ; elapsed = 00:05:28 . Memory (MB): peak = 5435.023 ; gain = 705.129
Phase 4.1 Post Commit Optimization | Checksum: 16d1bf5eb

Time (s): cpu = 00:07:41 ; elapsed = 00:05:29 . Memory (MB): peak = 5435.023 ; gain = 705.129
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 5442.133 ; gain = 0.000

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 22882f1b0

Time (s): cpu = 00:07:48 ; elapsed = 00:05:36 . Memory (MB): peak = 5442.133 ; gain = 712.238

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ________________________________________________________________________
|           | Global Congestion | Long Congestion   | Short Congestion  |
| Direction | Region Size       | Region Size       | Region Size       |
|___________|___________________|___________________|___________________|
|      North|                2x2|                2x2|                4x4|
|___________|___________________|___________________|___________________|
|      South|                1x1|                1x1|                4x4|
|___________|___________________|___________________|___________________|
|       East|                2x2|                1x1|              16x16|
|___________|___________________|___________________|___________________|
|       West|                4x4|                1x1|                8x8|
|___________|___________________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 22882f1b0

Time (s): cpu = 00:07:49 ; elapsed = 00:05:37 . Memory (MB): peak = 5442.133 ; gain = 712.238
Phase 4.3 Placer Reporting | Checksum: 22882f1b0

Time (s): cpu = 00:07:50 ; elapsed = 00:05:38 . Memory (MB): peak = 5442.133 ; gain = 712.238

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.053 . Memory (MB): peak = 5442.133 ; gain = 0.000

Time (s): cpu = 00:07:50 ; elapsed = 00:05:38 . Memory (MB): peak = 5442.133 ; gain = 712.238
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 22bcc1502

Time (s): cpu = 00:07:51 ; elapsed = 00:05:39 . Memory (MB): peak = 5442.133 ; gain = 712.238
Ending Placer Task | Checksum: 1fc716d67

Time (s): cpu = 00:07:51 ; elapsed = 00:05:39 . Memory (MB): peak = 5442.133 ; gain = 712.238
INFO: [Common 17-83] Releasing license: Implementation
124 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:07:59 ; elapsed = 00:05:43 . Memory (MB): peak = 5442.133 ; gain = 712.238
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:24 ; elapsed = 00:00:08 . Memory (MB): peak = 5442.133 ; gain = 0.000
report_design_analysis: Time (s): cpu = 00:00:10 ; elapsed = 00:00:09 . Memory (MB): peak = 5442.133 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:51 ; elapsed = 00:00:31 . Memory (MB): peak = 5442.133 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.072 . Memory (MB): peak = 5442.133 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.372 . Memory (MB): peak = 5442.133 ; gain = 0.000
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu7ev'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu7ev'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
133 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:45 ; elapsed = 00:00:26 . Memory (MB): peak = 5442.133 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:25 ; elapsed = 00:00:08 . Memory (MB): peak = 5442.133 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:42 ; elapsed = 00:00:21 . Memory (MB): peak = 5442.133 ; gain = 0.000
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xczu7ev'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu7ev'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 82c6fb27 ConstDB: 0 ShapeSum: be43767b RouteDB: bb66fbc5

Phase 1 Build RT Design
Nodegraph reading from file.  Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 5446.277 ; gain = 0.000
Phase 1 Build RT Design | Checksum: fd6e9f33

Time (s): cpu = 00:00:17 ; elapsed = 00:00:14 . Memory (MB): peak = 5482.164 ; gain = 35.887
Post Restoration Checksum: NetGraph: 458712e8 NumContArr: 3168f51 Constraints: 5937b81 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 4e311dba

Time (s): cpu = 00:00:19 ; elapsed = 00:00:16 . Memory (MB): peak = 5500.078 ; gain = 53.801

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 4e311dba

Time (s): cpu = 00:00:20 ; elapsed = 00:00:17 . Memory (MB): peak = 5513.855 ; gain = 67.578

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 4e311dba

Time (s): cpu = 00:00:20 ; elapsed = 00:00:17 . Memory (MB): peak = 5513.855 ; gain = 67.578

Phase 2.4 Global Clock Net Routing
 Number of Nodes with overlaps = 0
Phase 2.4 Global Clock Net Routing | Checksum: 108810bb9

Time (s): cpu = 00:00:27 ; elapsed = 00:00:23 . Memory (MB): peak = 5585.844 ; gain = 139.566

Phase 2.5 Update Timing
Phase 2.5 Update Timing | Checksum: 17d6923e1

Time (s): cpu = 00:01:20 ; elapsed = 00:00:55 . Memory (MB): peak = 5585.844 ; gain = 139.566
INFO: [Route 35-416] Intermediate Timing Summary | WNS=4.426  | TNS=0.000  | WHS=-0.098 | THS=-42.198|

Phase 2 Router Initialization | Checksum: 15b9ec29f

Time (s): cpu = 00:02:14 ; elapsed = 00:01:29 . Memory (MB): peak = 5749.062 ; gain = 302.785

Router Utilization Summary
  Global Vertical Routing Utilization    = 0.00940299 %
  Global Horizontal Routing Utilization  = 0.00295951 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 174226
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 168462
  Number of Partially Routed Nets     = 5764
  Number of Node Overlaps             = 206


Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 15b9ec29f

Time (s): cpu = 00:02:18 ; elapsed = 00:01:31 . Memory (MB): peak = 5749.062 ; gain = 302.785
Phase 3 Initial Routing | Checksum: 229fbe6ab

Time (s): cpu = 00:02:53 ; elapsed = 00:01:52 . Memory (MB): peak = 5750.492 ; gain = 304.215

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 26013
 Number of Nodes with overlaps = 1460
INFO: [Route 35-443] CLB routing congestion detected. Several CLBs have high routing utilization, which can impact timing closure. Congested CLBs and Nets are dumped in: iter_12_CongestedCLBsAndNets.txt
 Number of Nodes with overlaps = 102
 Number of Nodes with overlaps = 16
 Number of Nodes with overlaps = 8
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=2.428  | TNS=0.000  | WHS=-0.017 | THS=-0.202 |

Phase 4.1 Global Iteration 0 | Checksum: 1e7103cd1

Time (s): cpu = 00:05:57 ; elapsed = 00:03:48 . Memory (MB): peak = 5754.152 ; gain = 307.875

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=2.428  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1da2f844a

Time (s): cpu = 00:06:13 ; elapsed = 00:03:59 . Memory (MB): peak = 5754.152 ; gain = 307.875
Phase 4 Rip-up And Reroute | Checksum: 1da2f844a

Time (s): cpu = 00:06:13 ; elapsed = 00:04:00 . Memory (MB): peak = 5754.152 ; gain = 307.875

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 170e0e545

Time (s): cpu = 00:06:42 ; elapsed = 00:04:17 . Memory (MB): peak = 5754.152 ; gain = 307.875
INFO: [Route 35-416] Intermediate Timing Summary | WNS=2.428  | TNS=0.000  | WHS=0.010  | THS=0.000  |

Phase 5.1 Delay CleanUp | Checksum: 170e0e545

Time (s): cpu = 00:06:42 ; elapsed = 00:04:17 . Memory (MB): peak = 5754.152 ; gain = 307.875

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 170e0e545

Time (s): cpu = 00:06:43 ; elapsed = 00:04:18 . Memory (MB): peak = 5754.152 ; gain = 307.875
Phase 5 Delay and Skew Optimization | Checksum: 170e0e545

Time (s): cpu = 00:06:43 ; elapsed = 00:04:18 . Memory (MB): peak = 5754.152 ; gain = 307.875

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1468d24a3

Time (s): cpu = 00:07:04 ; elapsed = 00:04:31 . Memory (MB): peak = 5754.152 ; gain = 307.875
INFO: [Route 35-416] Intermediate Timing Summary | WNS=2.428  | TNS=0.000  | WHS=0.010  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 1ab049fd5

Time (s): cpu = 00:07:05 ; elapsed = 00:04:32 . Memory (MB): peak = 5754.152 ; gain = 307.875
Phase 6 Post Hold Fix | Checksum: 1ab049fd5

Time (s): cpu = 00:07:05 ; elapsed = 00:04:32 . Memory (MB): peak = 5754.152 ; gain = 307.875

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 8.52052 %
  Global Horizontal Routing Utilization  = 10.7418 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1a5e30d32

Time (s): cpu = 00:07:07 ; elapsed = 00:04:33 . Memory (MB): peak = 5754.152 ; gain = 307.875

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1a5e30d32

Time (s): cpu = 00:07:08 ; elapsed = 00:04:34 . Memory (MB): peak = 5754.152 ; gain = 307.875

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1a5e30d32

Time (s): cpu = 00:07:17 ; elapsed = 00:04:44 . Memory (MB): peak = 5754.152 ; gain = 307.875

Phase 10 Resolve XTalk
Phase 10 Resolve XTalk | Checksum: 1a5e30d32

Time (s): cpu = 00:07:18 ; elapsed = 00:04:45 . Memory (MB): peak = 5754.152 ; gain = 307.875

Phase 11 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=2.428  | TNS=0.000  | WHS=0.010  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 11 Post Router Timing | Checksum: 1a5e30d32

Time (s): cpu = 00:07:29 ; elapsed = 00:04:51 . Memory (MB): peak = 5754.152 ; gain = 307.875
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:07:29 ; elapsed = 00:04:51 . Memory (MB): peak = 5754.152 ; gain = 307.875

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
150 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:07:59 ; elapsed = 00:05:08 . Memory (MB): peak = 5754.152 ; gain = 312.020
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:32 ; elapsed = 00:00:10 . Memory (MB): peak = 5754.152 ; gain = 0.000
report_design_analysis: Time (s): cpu = 00:00:15 ; elapsed = 00:00:14 . Memory (MB): peak = 5754.152 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:01:00 ; elapsed = 00:00:37 . Memory (MB): peak = 5754.152 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file C:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:57 ; elapsed = 00:00:31 . Memory (MB): peak = 5873.203 ; gain = 119.051
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Vivado_Tcl 2-1520] The results of Report Methodology are in file C:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:49 ; elapsed = 00:00:27 . Memory (MB): peak = 5873.203 ; gain = 0.000
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
162 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:58 ; elapsed = 00:00:31 . Memory (MB): peak = 5889.059 ; gain = 15.855
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -2, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
report_timing_summary: Time (s): cpu = 00:00:08 ; elapsed = 00:00:06 . Memory (MB): peak = 5961.793 ; gain = 72.734
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
report_clock_utilization: Time (s): cpu = 00:00:09 ; elapsed = 00:00:08 . Memory (MB): peak = 5975.902 ; gain = 14.109
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -2, Temperature grade: E, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s02_nodes/s02_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s02_nodes/s02_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s02_nodes/s02_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s02_nodes/s02_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s02_nodes/s02_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s02_nodes/s02_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s02_nodes/s02_aw_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s02_nodes/s02_aw_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s02_nodes/s02_ar_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s02_nodes/s02_ar_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s01_nodes/s01_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s01_nodes/s01_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s01_nodes/s01_aw_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s01_nodes/s01_aw_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s01_nodes/s01_ar_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s01_nodes/s01_ar_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_aw_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/gen_normal.inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[2].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/gen_normal.inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[2].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/gen_normal.inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/gen_normal.inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/gen_normal.inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[0].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/gen_normal.inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[0].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/gen_normal.inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_aw_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_aw_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_ar_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_ar_node/inst/gen_normal.inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xczu7ev'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xczu7ev'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0 input design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_ln3_reg_2466_reg input design_1_i/creat_mec_matrix_0/inst/mul_ln3_reg_2466_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0 input design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout input design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-2] Input pipelining: DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0 input design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__1 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0 output design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__1 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0 output design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__0 output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__1 output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U1/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0 output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-3] PREG Output pipelining: DSP design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__1 output design_1_i/mul_v2_0/inst/mul_32s_32s_32_1_1_U72/dout__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul5_mid2_reg_2731_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/mul5_mid2_reg_2731_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul6_reg_2761_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/mul6_reg_2761_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U44/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U47/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U50/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U53/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U55/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U56/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U57/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U58/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U59/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U60/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U61/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U62/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U63/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U64/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U65/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U66/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U67/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U68/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U69/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__1 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U70/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0 multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_32s_32s_32_1_1_U71/dout__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_ln3_2_reg_2592_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_ln3_2_reg_2592_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/mul_ln3_reg_2466_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/mul_ln3_reg_2466_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/tmp1_0_reg_2817_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_0_reg_2817_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/tmp1_11_reg_2950_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_11_reg_2950_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/tmp1_14_reg_2991_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_14_reg_2991_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/tmp1_18_reg_3036_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_18_reg_3036_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/tmp1_1_reg_2828_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_1_reg_2828_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/tmp1_20_reg_3063_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_20_reg_3063_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/tmp1_5_reg_2879_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_5_reg_2879_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/creat_mec_matrix_0/inst/tmp1_7_reg_2899_reg multiplier stage design_1_i/creat_mec_matrix_0/inst/tmp1_7_reg_2899_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U1/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U2/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U3/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U4/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U5/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__1 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U6/dout__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0 multiplier stage design_1_i/extend_matrix_0/inst/mul_32s_32s_32_1_1_U7/dout__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_ln3_2_reg_718_reg multiplier stage design_1_i/extend_matrix_0/inst/mul_ln3_2_reg_718_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/extend_matrix_0/inst/mul_ln3_6_reg_728_reg multiplier stage design_1_i/extend_matrix_0/inst/mul_ln3_6_reg_728_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-4] MREG Output pipelining: DSP design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U92/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg multiplier stage design_1_i/mul_v2_0/inst/mac_muladd_3ns_3ns_6ns_6_4_1_U92/mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1_DSP48_5_U/p_reg_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-4' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O5=(A5)+((~A5)*(~A1)*A4)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O5=(A3)+((~A3)*(~A5)*A1)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O5=(A5)+((~A5)*(~A1)*A4)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A2' of cell design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O5=(A3)+((~A3)*(~A5)*A4)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A3' of cell design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O5=(A5)+((~A5)*(~A2)*A4)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A3' of cell design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1 (pin design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/gpregsm1.user_valid_i_1/I1) is not included in the LUT equation: 'O5=(A2)+((~A2)*(~A5)*A1)'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC RTSTAT-10] No routable loads: 66 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/ps8_0_axi_periph/s00_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_READ.read_addr_inst/cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i, design_1_i/ps8_0_axi_periph/s01_couplers/auto_ds/inst/gen_downsizer.gen_simple_downsizer.axi_downsizer_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_i... and (the first 15 of 42 listed).
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 256 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [#UNDEF] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'C:/University/Masters/Year_1/SYSC5906/SYSC5906_Project/Vivado_projects/MEC_HLS_implementation/MEC_HLS_implementation.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Fri Dec 17 02:49:28 2021. For additional details about this file, please refer to the WebTalk help file at G:/dev_tools/xilinx/Vivado/2021.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
38 Infos, 245 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:57 ; elapsed = 00:00:43 . Memory (MB): peak = 6471.691 ; gain = 482.859
INFO: [Common 17-206] Exiting Vivado at Fri Dec 17 02:49:29 2021...
