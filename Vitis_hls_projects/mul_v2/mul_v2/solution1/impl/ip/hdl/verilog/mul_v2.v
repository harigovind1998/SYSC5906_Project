// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mul_v2_mul_v2,hls_ip_2021_1_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=77,HLS_SYN_TPT=none,HLS_SYN_MEM=68,HLS_SYN_DSP=0,HLS_SYN_FF=3257,HLS_SYN_LUT=3845,HLS_VERSION=2021_1_1}" *)

module mul_v2 (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_ready;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
wire   [31:0] gmem_WDATA;
wire    gmem_ARREADY;
wire    gmem_RVALID;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
reg    ap_block_state17_pp0_stage0_iter16;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln87_fu_756_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] Inp;
wire   [31:0] wi;
wire   [31:0] hi;
wire   [31:0] ci;
wire   [31:0] wk;
wire   [31:0] nk;
wire   [63:0] O;
wire   [31:0] wo;
wire   [31:0] ho;
wire   [31:0] co;
wire   [31:0] s;
wire   [7:0] mul_v2_I_address0;
reg    mul_v2_I_ce0;
wire   [31:0] mul_v2_I_q0;
wire   [7:0] mul_v2_I_address1;
reg    mul_v2_I_ce1;
wire   [31:0] mul_v2_I_q1;
wire   [7:0] mul_v2_I_address2;
reg    mul_v2_I_ce2;
wire   [31:0] mul_v2_I_q2;
wire   [7:0] mul_v2_I_address3;
reg    mul_v2_I_ce3;
wire   [31:0] mul_v2_I_q3;
wire   [7:0] mul_v2_I_address4;
reg    mul_v2_I_ce4;
wire   [31:0] mul_v2_I_q4;
wire   [7:0] mul_v2_I_address5;
reg    mul_v2_I_ce5;
wire   [31:0] mul_v2_I_q5;
wire   [7:0] mul_v2_I_address6;
reg    mul_v2_I_ce6;
wire   [31:0] mul_v2_I_q6;
wire   [7:0] mul_v2_I_address7;
reg    mul_v2_I_ce7;
wire   [31:0] mul_v2_I_q7;
wire   [7:0] mul_v2_I_address8;
reg    mul_v2_I_ce8;
wire   [31:0] mul_v2_I_q8;
wire   [7:0] mul_v2_I_address9;
reg    mul_v2_I_ce9;
wire   [31:0] mul_v2_I_q9;
wire   [7:0] mul_v2_I_address10;
reg    mul_v2_I_ce10;
wire   [31:0] mul_v2_I_q10;
wire   [7:0] mul_v2_I_address11;
reg    mul_v2_I_ce11;
wire   [31:0] mul_v2_I_q11;
wire   [7:0] mul_v2_I_address12;
reg    mul_v2_I_ce12;
wire   [31:0] mul_v2_I_q12;
wire   [7:0] mul_v2_I_address13;
reg    mul_v2_I_ce13;
wire   [31:0] mul_v2_I_q13;
wire   [7:0] mul_v2_I_address14;
reg    mul_v2_I_ce14;
wire   [31:0] mul_v2_I_q14;
wire   [7:0] mul_v2_I_address15;
reg    mul_v2_I_ce15;
wire   [31:0] mul_v2_I_q15;
wire   [7:0] mul_v2_I_address16;
reg    mul_v2_I_ce16;
wire   [31:0] mul_v2_I_q16;
wire   [5:0] mul_v2_filter_address0;
reg    mul_v2_filter_ce0;
wire   [31:0] mul_v2_filter_q0;
wire   [5:0] mul_v2_filter_address1;
reg    mul_v2_filter_ce1;
wire   [31:0] mul_v2_filter_q1;
wire   [5:0] mul_v2_filter_address2;
reg    mul_v2_filter_ce2;
wire   [31:0] mul_v2_filter_q2;
wire   [5:0] mul_v2_filter_address3;
reg    mul_v2_filter_ce3;
wire   [31:0] mul_v2_filter_q3;
wire   [5:0] mul_v2_filter_address4;
reg    mul_v2_filter_ce4;
wire   [31:0] mul_v2_filter_q4;
wire   [5:0] mul_v2_filter_address5;
reg    mul_v2_filter_ce5;
wire   [31:0] mul_v2_filter_q5;
wire   [5:0] mul_v2_filter_address6;
reg    mul_v2_filter_ce6;
wire   [31:0] mul_v2_filter_q6;
wire   [5:0] mul_v2_filter_address7;
reg    mul_v2_filter_ce7;
wire   [31:0] mul_v2_filter_q7;
wire   [5:0] mul_v2_filter_address8;
reg    mul_v2_filter_ce8;
wire   [31:0] mul_v2_filter_q8;
wire   [5:0] mul_v2_filter_address9;
reg    mul_v2_filter_ce9;
wire   [31:0] mul_v2_filter_q9;
wire   [5:0] mul_v2_filter_address10;
reg    mul_v2_filter_ce10;
wire   [31:0] mul_v2_filter_q10;
wire   [5:0] mul_v2_filter_address11;
reg    mul_v2_filter_ce11;
wire   [31:0] mul_v2_filter_q11;
wire   [5:0] mul_v2_filter_address12;
reg    mul_v2_filter_ce12;
wire   [31:0] mul_v2_filter_q12;
wire   [5:0] mul_v2_filter_address13;
reg    mul_v2_filter_ce13;
wire   [31:0] mul_v2_filter_q13;
wire   [5:0] mul_v2_filter_address14;
reg    mul_v2_filter_ce14;
wire   [31:0] mul_v2_filter_q14;
wire   [5:0] mul_v2_filter_address15;
reg    mul_v2_filter_ce15;
wire   [31:0] mul_v2_filter_q15;
wire   [5:0] mul_v2_filter_address16;
reg    mul_v2_filter_ce16;
wire   [31:0] mul_v2_filter_q16;
reg    gmem_blk_n_AW;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] ho_read_reg_1976;
reg   [31:0] ho_read_reg_1976_pp0_iter1_reg;
reg   [31:0] ho_read_reg_1976_pp0_iter2_reg;
reg   [31:0] ho_read_reg_1976_pp0_iter3_reg;
reg   [31:0] ho_read_reg_1976_pp0_iter4_reg;
reg   [31:0] ho_read_reg_1976_pp0_iter5_reg;
reg   [31:0] ho_read_reg_1976_pp0_iter6_reg;
reg   [31:0] ho_read_reg_1976_pp0_iter7_reg;
reg   [31:0] ho_read_reg_1976_pp0_iter8_reg;
reg  signed [31:0] wo_read_reg_1981;
reg  signed [31:0] wo_read_reg_1981_pp0_iter1_reg;
reg  signed [31:0] wo_read_reg_1981_pp0_iter2_reg;
reg  signed [31:0] wo_read_reg_1981_pp0_iter3_reg;
reg  signed [31:0] wo_read_reg_1981_pp0_iter4_reg;
reg  signed [31:0] wo_read_reg_1981_pp0_iter5_reg;
reg  signed [31:0] wo_read_reg_1981_pp0_iter6_reg;
reg  signed [31:0] wo_read_reg_1981_pp0_iter7_reg;
reg  signed [31:0] wo_read_reg_1981_pp0_iter8_reg;
reg   [63:0] O_read_reg_1986;
reg   [63:0] O_read_reg_1986_pp0_iter1_reg;
reg   [63:0] O_read_reg_1986_pp0_iter2_reg;
reg   [63:0] O_read_reg_1986_pp0_iter3_reg;
reg   [63:0] O_read_reg_1986_pp0_iter4_reg;
reg   [63:0] O_read_reg_1986_pp0_iter5_reg;
reg   [63:0] O_read_reg_1986_pp0_iter6_reg;
reg   [63:0] O_read_reg_1986_pp0_iter7_reg;
reg   [63:0] O_read_reg_1986_pp0_iter8_reg;
wire   [7:0] empty_23_fu_686_p1;
reg   [7:0] empty_23_reg_1991;
reg   [7:0] empty_23_reg_1991_pp0_iter1_reg;
reg   [7:0] empty_23_reg_1991_pp0_iter2_reg;
reg   [7:0] empty_23_reg_1991_pp0_iter3_reg;
wire  signed [7:0] empty_25_fu_694_p1;
reg  signed [7:0] empty_25_reg_1997;
reg  signed [7:0] empty_25_reg_1997_pp0_iter1_reg;
reg  signed [7:0] empty_25_reg_1997_pp0_iter2_reg;
reg  signed [7:0] empty_25_reg_1997_pp0_iter3_reg;
wire  signed [7:0] empty_26_fu_698_p1;
reg  signed [7:0] empty_26_reg_2003;
reg  signed [7:0] empty_26_reg_2003_pp0_iter1_reg;
reg  signed [7:0] empty_26_reg_2003_pp0_iter2_reg;
reg  signed [7:0] empty_26_reg_2003_pp0_iter3_reg;
wire  signed [7:0] empty_27_fu_702_p1;
reg  signed [7:0] empty_27_reg_2009;
reg  signed [7:0] empty_27_reg_2009_pp0_iter1_reg;
wire  signed [5:0] empty_28_fu_706_p1;
reg  signed [5:0] empty_28_reg_2015;
reg  signed [5:0] empty_28_reg_2015_pp0_iter1_reg;
reg  signed [5:0] empty_28_reg_2015_pp0_iter2_reg;
reg  signed [5:0] empty_28_reg_2015_pp0_iter3_reg;
reg  signed [5:0] empty_28_reg_2015_pp0_iter4_reg;
wire   [5:0] mul_ln87_fu_710_p2;
reg   [5:0] mul_ln87_reg_2020;
reg   [5:0] mul_ln87_reg_2020_pp0_iter1_reg;
reg   [5:0] mul_ln87_reg_2020_pp0_iter2_reg;
reg   [5:0] mul_ln87_reg_2020_pp0_iter3_reg;
reg   [5:0] mul_ln87_reg_2020_pp0_iter4_reg;
wire  signed [7:0] mul_ln91_1_fu_716_p2;
reg  signed [7:0] mul_ln91_1_reg_2025;
reg  signed [7:0] mul_ln91_1_reg_2025_pp0_iter1_reg;
reg  signed [7:0] mul_ln91_1_reg_2025_pp0_iter2_reg;
reg  signed [7:0] mul_ln91_1_reg_2025_pp0_iter3_reg;
wire  signed [5:0] mul_ln91_2_fu_722_p2;
reg  signed [5:0] mul_ln91_2_reg_2030;
reg  signed [5:0] mul_ln91_2_reg_2030_pp0_iter1_reg;
reg  signed [5:0] mul_ln91_2_reg_2030_pp0_iter2_reg;
reg  signed [5:0] mul_ln91_2_reg_2030_pp0_iter3_reg;
reg  signed [5:0] mul_ln91_2_reg_2030_pp0_iter4_reg;
reg   [0:0] icmp_ln87_reg_2035;
reg   [0:0] icmp_ln87_reg_2035_pp0_iter1_reg;
reg   [0:0] icmp_ln87_reg_2035_pp0_iter2_reg;
reg   [0:0] icmp_ln87_reg_2035_pp0_iter3_reg;
wire   [0:0] icmp_ln88_fu_774_p2;
reg   [0:0] icmp_ln88_reg_2039;
reg   [0:0] icmp_ln88_reg_2039_pp0_iter1_reg;
reg   [0:0] icmp_ln88_reg_2039_pp0_iter2_reg;
reg   [0:0] icmp_ln88_reg_2039_pp0_iter3_reg;
wire   [0:0] and_ln87_fu_792_p2;
reg   [0:0] and_ln87_reg_2046;
reg   [0:0] and_ln87_reg_2046_pp0_iter1_reg;
reg   [0:0] and_ln87_reg_2046_pp0_iter2_reg;
reg   [0:0] and_ln87_reg_2046_pp0_iter3_reg;
wire   [0:0] trunc_ln91_fu_812_p1;
reg   [0:0] trunc_ln91_reg_2052;
reg   [0:0] trunc_ln91_reg_2052_pp0_iter1_reg;
reg   [0:0] trunc_ln91_reg_2052_pp0_iter2_reg;
reg   [0:0] trunc_ln91_reg_2052_pp0_iter3_reg;
reg   [0:0] trunc_ln91_reg_2052_pp0_iter4_reg;
reg   [0:0] trunc_ln91_reg_2052_pp0_iter5_reg;
reg   [0:0] trunc_ln91_reg_2052_pp0_iter6_reg;
reg   [0:0] trunc_ln91_reg_2052_pp0_iter7_reg;
reg   [0:0] trunc_ln91_reg_2052_pp0_iter8_reg;
wire   [31:0] zext_ln91_2_fu_816_p1;
wire   [2:0] select_ln87_1_fu_876_p3;
reg   [2:0] select_ln87_1_reg_2063;
reg   [2:0] select_ln87_1_reg_2063_pp0_iter3_reg;
reg   [2:0] select_ln87_1_reg_2063_pp0_iter4_reg;
reg   [2:0] select_ln87_1_reg_2063_pp0_iter5_reg;
reg   [2:0] select_ln87_1_reg_2063_pp0_iter6_reg;
reg   [2:0] select_ln87_1_reg_2063_pp0_iter7_reg;
reg   [2:0] select_ln87_1_reg_2063_pp0_iter8_reg;
wire   [7:0] zext_ln87_1_fu_883_p1;
wire   [2:0] select_ln88_1_fu_929_p3;
reg   [2:0] select_ln88_1_reg_2073;
reg   [2:0] select_ln88_1_reg_2073_pp0_iter5_reg;
reg   [2:0] select_ln88_1_reg_2073_pp0_iter6_reg;
reg   [2:0] select_ln88_1_reg_2073_pp0_iter7_reg;
reg   [2:0] select_ln88_1_reg_2073_pp0_iter8_reg;
wire   [7:0] select_ln88_2_fu_950_p3;
reg   [7:0] select_ln88_2_reg_2078;
wire   [7:0] mul_ln91_fu_974_p2;
wire   [0:0] grp_fu_826_p2;
reg   [0:0] urem_ln91_reg_2090;
(* use_dsp48 = "no" *) wire   [7:0] add_ln91_1_fu_984_p2;
reg   [7:0] add_ln91_1_reg_2095;
reg   [7:0] add_ln91_1_reg_2095_pp0_iter6_reg;
wire   [5:0] mul_ln91_3_fu_1009_p2;
reg   [5:0] mul_ln91_3_reg_2108;
reg   [5:0] mul_ln91_3_reg_2108_pp0_iter6_reg;
(* use_dsp48 = "no" *) wire   [7:0] add_ln100_1_fu_1107_p2;
reg   [7:0] add_ln100_1_reg_2161;
reg   [7:0] add_ln100_1_reg_2161_pp0_iter6_reg;
wire   [5:0] add_ln100_2_fu_1111_p2;
reg   [5:0] add_ln100_2_reg_2171;
reg   [5:0] add_ln100_2_reg_2171_pp0_iter6_reg;
wire   [5:0] mul_ln92_fu_1508_p2;
wire   [5:0] mul_ln93_fu_1530_p2;
wire   [5:0] mul_ln95_fu_1552_p2;
wire   [5:0] mul_ln97_fu_1574_p2;
wire   [5:0] mul_ln102_fu_1612_p2;
wire   [2:0] trunc_ln104_fu_1618_p1;
reg   [2:0] trunc_ln104_reg_2416;
wire   [2:0] trunc_ln104_1_fu_1622_p1;
reg   [2:0] trunc_ln104_1_reg_2421;
wire   [5:0] mul_ln107_fu_1642_p2;
wire   [5:0] mul_ln104_fu_1674_p2;
wire   [7:0] add_ln107_9_fu_1712_p2;
reg   [7:0] add_ln107_9_reg_2441;
wire   [6:0] add_ln107_12_fu_1724_p2;
reg   [6:0] add_ln107_12_reg_2446;
wire   [5:0] grp_fu_1909_p3;
reg   [63:0] gmem_addr_reg_2456;
wire   [8:0] add_ln107_2_fu_1828_p2;
reg   [8:0] add_ln107_2_reg_2462;
reg    ap_condition_exit_pp0_iter4_stage0;
wire   [63:0] zext_ln91_fu_988_p1;
wire   [63:0] zext_ln91_1_fu_1014_p1;
wire   [63:0] zext_ln94_fu_1025_p1;
wire   [63:0] zext_ln94_1_fu_1036_p1;
wire   [63:0] zext_ln96_fu_1047_p1;
wire   [63:0] zext_ln96_1_fu_1058_p1;
wire   [63:0] zext_ln98_fu_1069_p1;
wire   [63:0] zext_ln98_1_fu_1080_p1;
wire   [63:0] zext_ln99_fu_1091_p1;
wire   [63:0] zext_ln99_1_fu_1102_p1;
wire   [63:0] zext_ln103_fu_1122_p1;
wire   [63:0] zext_ln103_1_fu_1133_p1;
wire   [63:0] zext_ln108_fu_1144_p1;
wire   [63:0] zext_ln108_1_fu_1155_p1;
wire   [63:0] zext_ln105_fu_1261_p1;
wire   [63:0] zext_ln105_1_fu_1271_p1;
wire   [63:0] zext_ln106_fu_1281_p1;
wire   [63:0] zext_ln106_1_fu_1291_p1;
wire   [63:0] zext_ln92_fu_1317_p1;
wire   [63:0] zext_ln92_1_fu_1327_p1;
wire   [63:0] zext_ln93_fu_1337_p1;
wire   [63:0] zext_ln93_1_fu_1347_p1;
wire   [63:0] zext_ln95_fu_1357_p1;
wire   [63:0] zext_ln95_1_fu_1367_p1;
wire   [63:0] zext_ln97_fu_1377_p1;
wire   [63:0] zext_ln97_1_fu_1387_p1;
wire   [63:0] zext_ln100_fu_1392_p1;
wire   [63:0] zext_ln100_1_fu_1396_p1;
wire   [63:0] zext_ln102_fu_1405_p1;
wire   [63:0] zext_ln102_1_fu_1415_p1;
wire   [63:0] zext_ln104_fu_1425_p1;
wire   [63:0] zext_ln104_1_fu_1435_p1;
wire   [63:0] zext_ln107_fu_1477_p1;
wire   [63:0] zext_ln107_1_fu_1487_p1;
wire  signed [63:0] sext_ln91_fu_1786_p1;
reg    ap_block_pp0_stage0_01001;
reg   [1:0] tz_fu_182;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_tz_load;
wire   [1:0] add_ln89_fu_832_p2;
reg   [2:0] ty_fu_186;
reg   [4:0] indvar_flatten_fu_190;
reg   [4:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [4:0] select_ln88_3_fu_844_p3;
reg   [2:0] tx_fu_194;
reg   [5:0] indvar_flatten19_fu_198;
reg   [5:0] ap_sig_allocacmp_indvar_flatten19_load;
wire   [5:0] add_ln87_1_fu_762_p2;
wire  signed [7:0] mul_ln91_1_fu_716_p0;
wire  signed [7:0] mul_ln91_1_fu_716_p1;
wire  signed [5:0] mul_ln91_2_fu_722_p0;
wire   [0:0] icmp_ln89_fu_786_p2;
wire   [0:0] xor_ln87_fu_780_p2;
wire   [0:0] or_ln88_fu_798_p2;
wire   [1:0] select_ln88_fu_804_p3;
wire   [0:0] grp_fu_820_p0;
wire   [0:0] grp_fu_826_p0;
wire   [4:0] add_ln88_1_fu_838_p2;
wire   [2:0] add_ln87_2_fu_870_p2;
wire   [2:0] tmp4_fu_899_p0;
wire  signed [7:0] tmp4_fu_899_p2;
wire   [7:0] mul10_fu_904_p2;
wire   [2:0] select_ln87_fu_909_p3;
wire   [2:0] ty_3_fu_923_p2;
wire   [2:0] tmp4_mid1_fu_940_p0;
wire  signed [7:0] tmp4_mid1_fu_940_p2;
wire   [7:0] mul10_mid1_fu_945_p2;
wire   [7:0] select_ln87_2_fu_916_p3;
wire   [0:0] grp_fu_820_p2;
wire   [0:0] trunc_ln91_2_fu_957_p1;
wire   [7:0] select_ln91_fu_961_p3;
wire  signed [7:0] mul_ln91_fu_974_p0;
wire  signed [7:0] add_ln91_1_fu_984_p0;
wire   [7:0] grp_fu_1838_p3;
wire   [0:0] trunc_ln91_4_fu_993_p1;
wire   [5:0] select_ln91_1_fu_996_p3;
wire  signed [5:0] mul_ln91_3_fu_1009_p0;
wire   [7:0] add_ln94_fu_1019_p2;
wire   [5:0] add_ln94_1_fu_1030_p2;
wire   [7:0] add_ln96_fu_1041_p2;
wire   [5:0] add_ln96_1_fu_1052_p2;
wire   [7:0] add_ln98_fu_1063_p2;
wire   [5:0] add_ln98_1_fu_1074_p2;
wire   [7:0] add_ln99_fu_1085_p2;
wire   [5:0] add_ln99_1_fu_1096_p2;
wire  signed [7:0] add_ln100_1_fu_1107_p0;
wire   [7:0] grp_fu_1846_p4;
wire   [7:0] add_ln103_fu_1116_p2;
wire   [5:0] add_ln103_1_fu_1127_p2;
wire   [7:0] add_ln108_fu_1138_p2;
wire   [5:0] add_ln108_1_fu_1149_p2;
wire   [2:0] trunc_ln91_3_fu_1160_p1;
wire   [2:0] trunc_ln91_5_fu_1168_p1;
wire   [2:0] trunc_ln94_fu_1176_p1;
wire   [2:0] trunc_ln94_1_fu_1184_p1;
wire   [2:0] trunc_ln96_fu_1192_p1;
wire   [2:0] trunc_ln96_1_fu_1200_p1;
wire   [2:0] trunc_ln98_fu_1208_p1;
wire   [2:0] trunc_ln98_1_fu_1216_p1;
wire   [2:0] trunc_ln99_fu_1224_p1;
wire   [2:0] trunc_ln99_1_fu_1232_p1;
wire   [2:0] trunc_ln103_fu_1240_p1;
wire   [2:0] trunc_ln103_1_fu_1248_p1;
wire   [7:0] add_ln105_fu_1256_p2;
wire   [5:0] add_ln105_1_fu_1266_p2;
wire   [7:0] add_ln106_fu_1276_p2;
wire   [5:0] add_ln106_1_fu_1286_p2;
wire   [2:0] trunc_ln108_fu_1296_p1;
wire   [2:0] trunc_ln108_1_fu_1304_p1;
wire   [7:0] add_ln92_fu_1312_p2;
wire   [5:0] add_ln92_1_fu_1322_p2;
wire   [7:0] add_ln93_fu_1332_p2;
wire   [5:0] add_ln93_1_fu_1342_p2;
wire   [7:0] add_ln95_fu_1352_p2;
wire   [5:0] add_ln95_1_fu_1362_p2;
wire   [7:0] add_ln97_fu_1372_p2;
wire   [5:0] add_ln97_1_fu_1382_p2;
wire   [7:0] add_ln102_fu_1400_p2;
wire   [5:0] add_ln102_1_fu_1410_p2;
wire   [7:0] add_ln104_fu_1420_p2;
wire   [5:0] add_ln104_1_fu_1430_p2;
wire   [2:0] trunc_ln105_fu_1440_p1;
wire   [2:0] trunc_ln105_1_fu_1448_p1;
wire   [2:0] trunc_ln106_fu_1456_p1;
wire   [2:0] trunc_ln106_1_fu_1464_p1;
wire   [7:0] add_ln107_fu_1472_p2;
wire   [5:0] add_ln107_1_fu_1482_p2;
wire   [2:0] trunc_ln92_fu_1492_p1;
wire   [2:0] trunc_ln92_1_fu_1500_p1;
wire   [2:0] mul_ln92_fu_1508_p0;
wire   [2:0] mul_ln92_fu_1508_p1;
wire   [2:0] trunc_ln93_fu_1514_p1;
wire   [2:0] trunc_ln93_1_fu_1522_p1;
wire   [2:0] mul_ln93_fu_1530_p0;
wire   [2:0] mul_ln93_fu_1530_p1;
wire   [2:0] trunc_ln95_fu_1536_p1;
wire   [2:0] trunc_ln95_1_fu_1544_p1;
wire   [2:0] mul_ln95_fu_1552_p0;
wire   [2:0] mul_ln95_fu_1552_p1;
wire   [2:0] trunc_ln97_fu_1558_p1;
wire   [2:0] trunc_ln97_1_fu_1566_p1;
wire   [2:0] mul_ln97_fu_1574_p0;
wire   [2:0] mul_ln97_fu_1574_p1;
wire   [2:0] trunc_ln100_fu_1580_p1;
wire   [2:0] trunc_ln102_fu_1588_p1;
wire   [2:0] trunc_ln102_1_fu_1596_p1;
wire   [2:0] trunc_ln102_2_fu_1604_p1;
wire   [2:0] mul_ln102_fu_1612_p0;
wire   [2:0] mul_ln102_fu_1612_p1;
wire   [2:0] trunc_ln107_fu_1626_p1;
wire   [2:0] trunc_ln107_1_fu_1634_p1;
wire   [2:0] mul_ln107_fu_1642_p0;
wire   [2:0] mul_ln107_fu_1642_p1;
wire   [2:0] factor1_fu_1648_p0;
wire   [2:0] factor1_fu_1648_p1;
wire   [4:0] factor1_fu_1648_p2;
wire   [2:0] mul_ln104_fu_1674_p0;
wire   [2:0] mul_ln104_fu_1674_p1;
wire   [5:0] grp_fu_1855_p3;
wire   [5:0] grp_fu_1864_p3;
wire   [6:0] zext_ln107_5_fu_1683_p1;
wire   [6:0] zext_ln107_4_fu_1680_p1;
wire   [6:0] add_ln107_5_fu_1686_p2;
wire   [5:0] grp_fu_1873_p3;
wire   [5:0] grp_fu_1882_p3;
wire   [6:0] zext_ln107_8_fu_1699_p1;
wire   [6:0] zext_ln107_7_fu_1696_p1;
wire   [6:0] add_ln107_8_fu_1702_p2;
wire   [7:0] zext_ln107_9_fu_1708_p1;
wire   [7:0] zext_ln107_6_fu_1692_p1;
wire   [5:0] grp_fu_1891_p3;
wire   [5:0] grp_fu_1900_p3;
wire   [6:0] zext_ln107_12_fu_1721_p1;
wire   [6:0] zext_ln107_11_fu_1718_p1;
wire   [31:0] select_ln91_2_fu_1730_p3;
wire   [31:0] and_ln91_2_fu_1737_p2;
wire   [31:0] select_ln88_1_cast_fu_1665_p1;
wire  signed [31:0] tmp1_fu_1748_p0;
wire   [31:0] tmp1_fu_1748_p2;
wire   [31:0] zext_ln87_fu_1662_p1;
wire   [31:0] add_ln91_2_fu_1753_p2;
wire   [33:0] shl_ln_fu_1759_p3;
wire   [63:0] zext_ln91_6_fu_1767_p1;
wire   [63:0] add_ln91_3_fu_1771_p2;
wire   [61:0] trunc_ln91_1_fu_1776_p4;
wire   [5:0] grp_fu_1917_p3;
wire   [5:0] grp_fu_1926_p3;
wire   [6:0] zext_ln107_15_fu_1805_p1;
wire   [6:0] zext_ln107_14_fu_1802_p1;
wire   [6:0] add_ln107_16_fu_1808_p2;
wire   [7:0] zext_ln107_16_fu_1814_p1;
wire   [7:0] zext_ln107_13_fu_1799_p1;
wire   [7:0] add_ln107_17_fu_1818_p2;
wire   [8:0] zext_ln107_17_fu_1824_p1;
wire   [8:0] zext_ln107_10_fu_1796_p1;
wire   [2:0] grp_fu_1838_p0;
wire   [2:0] grp_fu_1846_p0;
wire   [2:0] grp_fu_1855_p0;
wire   [2:0] grp_fu_1855_p1;
wire   [2:0] grp_fu_1864_p0;
wire   [2:0] grp_fu_1864_p1;
wire   [2:0] grp_fu_1873_p0;
wire   [2:0] grp_fu_1873_p1;
wire   [2:0] grp_fu_1882_p0;
wire   [2:0] grp_fu_1882_p1;
wire   [2:0] grp_fu_1891_p0;
wire   [2:0] grp_fu_1891_p1;
wire   [5:0] grp_fu_1891_p2;
wire   [2:0] grp_fu_1900_p0;
wire   [2:0] grp_fu_1900_p1;
wire   [2:0] grp_fu_1909_p0;
wire   [2:0] grp_fu_1909_p1;
wire   [2:0] grp_fu_1917_p0;
wire   [2:0] grp_fu_1917_p1;
wire   [2:0] grp_fu_1926_p0;
wire   [2:0] grp_fu_1926_p1;
reg    grp_fu_820_ap_start;
wire    grp_fu_820_ap_done;
reg    grp_fu_820_ce;
reg    grp_fu_826_ap_start;
wire    grp_fu_826_ap_done;
reg    grp_fu_826_ce;
reg    grp_fu_1838_ce;
reg    grp_fu_1846_ce;
reg    grp_fu_1855_ce;
reg    grp_fu_1864_ce;
reg    grp_fu_1873_ce;
reg    grp_fu_1882_ce;
reg    grp_fu_1891_ce;
reg    grp_fu_1900_ce;
reg    grp_fu_1909_ce;
reg    grp_fu_1917_ce;
reg    grp_fu_1926_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [4:0] factor1_fu_1648_p00;
wire   [4:0] factor1_fu_1648_p10;
wire   [5:0] grp_fu_1855_p00;
wire   [5:0] grp_fu_1855_p10;
wire   [5:0] grp_fu_1864_p00;
wire   [5:0] grp_fu_1864_p10;
wire   [5:0] grp_fu_1873_p00;
wire   [5:0] grp_fu_1873_p10;
wire   [5:0] grp_fu_1882_p00;
wire   [5:0] grp_fu_1882_p10;
wire   [5:0] grp_fu_1891_p00;
wire   [5:0] grp_fu_1891_p10;
wire   [5:0] grp_fu_1900_p00;
wire   [5:0] grp_fu_1900_p10;
wire   [5:0] grp_fu_1909_p00;
wire   [5:0] grp_fu_1909_p10;
wire   [5:0] grp_fu_1917_p00;
wire   [5:0] grp_fu_1917_p10;
wire   [5:0] grp_fu_1926_p00;
wire   [5:0] grp_fu_1926_p10;
wire   [5:0] mul_ln102_fu_1612_p00;
wire   [5:0] mul_ln102_fu_1612_p10;
wire   [5:0] mul_ln104_fu_1674_p00;
wire   [5:0] mul_ln104_fu_1674_p10;
wire   [5:0] mul_ln107_fu_1642_p00;
wire   [5:0] mul_ln107_fu_1642_p10;
wire   [5:0] mul_ln92_fu_1508_p00;
wire   [5:0] mul_ln92_fu_1508_p10;
wire   [5:0] mul_ln93_fu_1530_p00;
wire   [5:0] mul_ln93_fu_1530_p10;
wire   [5:0] mul_ln95_fu_1552_p00;
wire   [5:0] mul_ln95_fu_1552_p10;
wire   [5:0] mul_ln97_fu_1574_p00;
wire   [5:0] mul_ln97_fu_1574_p10;
wire   [7:0] tmp4_fu_899_p00;
wire   [7:0] tmp4_mid1_fu_940_p00;
reg    ap_condition_846;
reg    ap_condition_844;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

mul_v2_mul_v2_I #(
    .DataWidth( 32 ),
    .AddressRange( 152 ),
    .AddressWidth( 8 ))
mul_v2_I_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mul_v2_I_address0),
    .ce0(mul_v2_I_ce0),
    .q0(mul_v2_I_q0),
    .address1(mul_v2_I_address1),
    .ce1(mul_v2_I_ce1),
    .q1(mul_v2_I_q1),
    .address2(mul_v2_I_address2),
    .ce2(mul_v2_I_ce2),
    .q2(mul_v2_I_q2),
    .address3(mul_v2_I_address3),
    .ce3(mul_v2_I_ce3),
    .q3(mul_v2_I_q3),
    .address4(mul_v2_I_address4),
    .ce4(mul_v2_I_ce4),
    .q4(mul_v2_I_q4),
    .address5(mul_v2_I_address5),
    .ce5(mul_v2_I_ce5),
    .q5(mul_v2_I_q5),
    .address6(mul_v2_I_address6),
    .ce6(mul_v2_I_ce6),
    .q6(mul_v2_I_q6),
    .address7(mul_v2_I_address7),
    .ce7(mul_v2_I_ce7),
    .q7(mul_v2_I_q7),
    .address8(mul_v2_I_address8),
    .ce8(mul_v2_I_ce8),
    .q8(mul_v2_I_q8),
    .address9(mul_v2_I_address9),
    .ce9(mul_v2_I_ce9),
    .q9(mul_v2_I_q9),
    .address10(mul_v2_I_address10),
    .ce10(mul_v2_I_ce10),
    .q10(mul_v2_I_q10),
    .address11(mul_v2_I_address11),
    .ce11(mul_v2_I_ce11),
    .q11(mul_v2_I_q11),
    .address12(mul_v2_I_address12),
    .ce12(mul_v2_I_ce12),
    .q12(mul_v2_I_q12),
    .address13(mul_v2_I_address13),
    .ce13(mul_v2_I_ce13),
    .q13(mul_v2_I_q13),
    .address14(mul_v2_I_address14),
    .ce14(mul_v2_I_ce14),
    .q14(mul_v2_I_q14),
    .address15(mul_v2_I_address15),
    .ce15(mul_v2_I_ce15),
    .q15(mul_v2_I_q15),
    .address16(mul_v2_I_address16),
    .ce16(mul_v2_I_ce16),
    .q16(mul_v2_I_q16)
);

mul_v2_mul_v2_filter #(
    .DataWidth( 32 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
mul_v2_filter_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mul_v2_filter_address0),
    .ce0(mul_v2_filter_ce0),
    .q0(mul_v2_filter_q0),
    .address1(mul_v2_filter_address1),
    .ce1(mul_v2_filter_ce1),
    .q1(mul_v2_filter_q1),
    .address2(mul_v2_filter_address2),
    .ce2(mul_v2_filter_ce2),
    .q2(mul_v2_filter_q2),
    .address3(mul_v2_filter_address3),
    .ce3(mul_v2_filter_ce3),
    .q3(mul_v2_filter_q3),
    .address4(mul_v2_filter_address4),
    .ce4(mul_v2_filter_ce4),
    .q4(mul_v2_filter_q4),
    .address5(mul_v2_filter_address5),
    .ce5(mul_v2_filter_ce5),
    .q5(mul_v2_filter_q5),
    .address6(mul_v2_filter_address6),
    .ce6(mul_v2_filter_ce6),
    .q6(mul_v2_filter_q6),
    .address7(mul_v2_filter_address7),
    .ce7(mul_v2_filter_ce7),
    .q7(mul_v2_filter_q7),
    .address8(mul_v2_filter_address8),
    .ce8(mul_v2_filter_ce8),
    .q8(mul_v2_filter_q8),
    .address9(mul_v2_filter_address9),
    .ce9(mul_v2_filter_ce9),
    .q9(mul_v2_filter_q9),
    .address10(mul_v2_filter_address10),
    .ce10(mul_v2_filter_ce10),
    .q10(mul_v2_filter_q10),
    .address11(mul_v2_filter_address11),
    .ce11(mul_v2_filter_ce11),
    .q11(mul_v2_filter_q11),
    .address12(mul_v2_filter_address12),
    .ce12(mul_v2_filter_ce12),
    .q12(mul_v2_filter_q12),
    .address13(mul_v2_filter_address13),
    .ce13(mul_v2_filter_ce13),
    .q13(mul_v2_filter_q13),
    .address14(mul_v2_filter_address14),
    .ce14(mul_v2_filter_ce14),
    .q14(mul_v2_filter_q14),
    .address15(mul_v2_filter_address15),
    .ce15(mul_v2_filter_ce15),
    .q15(mul_v2_filter_q15),
    .address16(mul_v2_filter_address16),
    .ce16(mul_v2_filter_ce16),
    .q16(mul_v2_filter_q16)
);

mul_v2_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .Inp(Inp),
    .wi(wi),
    .hi(hi),
    .ci(ci),
    .wk(wk),
    .nk(nk),
    .O(O),
    .wo(wo),
    .ho(ho),
    .co(co),
    .s(s),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

mul_v2_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_reg_2456),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

mul_v2_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U1(
    .din0(empty_28_fu_706_p1),
    .din1(empty_28_fu_706_p1),
    .dout(mul_ln87_fu_710_p2)
);

mul_v2_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U2(
    .din0(mul_ln91_1_fu_716_p0),
    .din1(mul_ln91_1_fu_716_p1),
    .dout(mul_ln91_1_fu_716_p2)
);

mul_v2_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U3(
    .din0(mul_ln91_2_fu_722_p0),
    .din1(empty_28_fu_706_p1),
    .dout(mul_ln91_2_fu_722_p2)
);

mul_v2_udiv_1ns_32ns_1_5_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
udiv_1ns_32ns_1_5_seq_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_820_ap_start),
    .done(grp_fu_820_ap_done),
    .din0(grp_fu_820_p0),
    .din1(co),
    .ce(grp_fu_820_ce),
    .dout(grp_fu_820_p2)
);

mul_v2_urem_1ns_32ns_1_5_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
urem_1ns_32ns_1_5_seq_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_826_ap_start),
    .done(grp_fu_826_ap_done),
    .din0(grp_fu_826_p0),
    .din1(co),
    .ce(grp_fu_826_ce),
    .dout(grp_fu_826_p2)
);

mul_v2_mul_3ns_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_3ns_8s_8_1_1_U6(
    .din0(tmp4_fu_899_p0),
    .din1(empty_26_reg_2003_pp0_iter3_reg),
    .dout(tmp4_fu_899_p2)
);

mul_v2_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U7(
    .din0(tmp4_fu_899_p2),
    .din1(empty_25_reg_1997_pp0_iter3_reg),
    .dout(mul10_fu_904_p2)
);

mul_v2_mul_3ns_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_3ns_8s_8_1_1_U8(
    .din0(tmp4_mid1_fu_940_p0),
    .din1(empty_26_reg_2003_pp0_iter3_reg),
    .dout(tmp4_mid1_fu_940_p2)
);

mul_v2_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U9(
    .din0(tmp4_mid1_fu_940_p2),
    .din1(empty_25_reg_1997_pp0_iter3_reg),
    .dout(mul10_mid1_fu_945_p2)
);

mul_v2_mul_8s_8s_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mul_8s_8s_8_1_1_U10(
    .din0(mul_ln91_fu_974_p0),
    .din1(mul_ln91_1_reg_2025_pp0_iter3_reg),
    .dout(mul_ln91_fu_974_p2)
);

mul_v2_mul_6s_6s_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mul_6s_6s_6_1_1_U11(
    .din0(mul_ln91_3_fu_1009_p0),
    .din1(mul_ln91_2_reg_2030_pp0_iter4_reg),
    .dout(mul_ln91_3_fu_1009_p2)
);

mul_v2_mul_3ns_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3ns_6_1_1_U12(
    .din0(mul_ln92_fu_1508_p0),
    .din1(mul_ln92_fu_1508_p1),
    .dout(mul_ln92_fu_1508_p2)
);

mul_v2_mul_3ns_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3ns_6_1_1_U13(
    .din0(mul_ln93_fu_1530_p0),
    .din1(mul_ln93_fu_1530_p1),
    .dout(mul_ln93_fu_1530_p2)
);

mul_v2_mul_3ns_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3ns_6_1_1_U14(
    .din0(mul_ln95_fu_1552_p0),
    .din1(mul_ln95_fu_1552_p1),
    .dout(mul_ln95_fu_1552_p2)
);

mul_v2_mul_3ns_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3ns_6_1_1_U15(
    .din0(mul_ln97_fu_1574_p0),
    .din1(mul_ln97_fu_1574_p1),
    .dout(mul_ln97_fu_1574_p2)
);

mul_v2_mul_3ns_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3ns_6_1_1_U16(
    .din0(mul_ln102_fu_1612_p0),
    .din1(mul_ln102_fu_1612_p1),
    .dout(mul_ln102_fu_1612_p2)
);

mul_v2_mul_3ns_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3ns_6_1_1_U17(
    .din0(mul_ln107_fu_1642_p0),
    .din1(mul_ln107_fu_1642_p1),
    .dout(mul_ln107_fu_1642_p2)
);

mul_v2_mul_3ns_3ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 5 ))
mul_3ns_3ns_5_1_1_U18(
    .din0(factor1_fu_1648_p0),
    .din1(factor1_fu_1648_p1),
    .dout(factor1_fu_1648_p2)
);

mul_v2_mul_3ns_3ns_6_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 6 ))
mul_3ns_3ns_6_1_1_U19(
    .din0(mul_ln104_fu_1674_p0),
    .din1(mul_ln104_fu_1674_p1),
    .dout(mul_ln104_fu_1674_p2)
);

mul_v2_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U20(
    .din0(tmp1_fu_1748_p0),
    .din1(wo_read_reg_1981_pp0_iter8_reg),
    .dout(tmp1_fu_1748_p2)
);

mul_v2_mac_muladd_3ns_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
mac_muladd_3ns_8s_8ns_8_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1838_p0),
    .din1(empty_27_reg_2009_pp0_iter1_reg),
    .din2(mul_ln91_fu_974_p2),
    .ce(grp_fu_1838_ce),
    .dout(grp_fu_1838_p3)
);

mul_v2_ama_addmuladd_3ns_8ns_8s_8ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
ama_addmuladd_3ns_8ns_8s_8ns_8_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1846_p0),
    .din1(empty_23_reg_1991_pp0_iter1_reg),
    .din2(empty_27_reg_2009_pp0_iter1_reg),
    .din3(mul_ln91_fu_974_p2),
    .ce(grp_fu_1846_ce),
    .dout(grp_fu_1846_p4)
);

mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_3ns_3ns_6ns_6_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1855_p0),
    .din1(grp_fu_1855_p1),
    .din2(mul_ln92_fu_1508_p2),
    .ce(grp_fu_1855_ce),
    .dout(grp_fu_1855_p3)
);

mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_3ns_3ns_6ns_6_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1864_p0),
    .din1(grp_fu_1864_p1),
    .din2(mul_ln93_fu_1530_p2),
    .ce(grp_fu_1864_ce),
    .dout(grp_fu_1864_p3)
);

mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_3ns_3ns_6ns_6_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1873_p0),
    .din1(grp_fu_1873_p1),
    .din2(mul_ln95_fu_1552_p2),
    .ce(grp_fu_1873_ce),
    .dout(grp_fu_1873_p3)
);

mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_3ns_3ns_6ns_6_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1882_p0),
    .din1(grp_fu_1882_p1),
    .din2(mul_ln97_fu_1574_p2),
    .ce(grp_fu_1882_ce),
    .dout(grp_fu_1882_p3)
);

mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_3ns_3ns_6ns_6_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1891_p0),
    .din1(grp_fu_1891_p1),
    .din2(grp_fu_1891_p2),
    .ce(grp_fu_1891_ce),
    .dout(grp_fu_1891_p3)
);

mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_3ns_3ns_6ns_6_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1900_p0),
    .din1(grp_fu_1900_p1),
    .din2(mul_ln102_fu_1612_p2),
    .ce(grp_fu_1900_ce),
    .dout(grp_fu_1900_p3)
);

mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_3ns_3ns_6ns_6_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1909_p0),
    .din1(grp_fu_1909_p1),
    .din2(mul_ln107_fu_1642_p2),
    .ce(grp_fu_1909_ce),
    .dout(grp_fu_1909_p3)
);

mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_3ns_3ns_6ns_6_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1917_p0),
    .din1(grp_fu_1917_p1),
    .din2(mul_ln104_fu_1674_p2),
    .ce(grp_fu_1917_ce),
    .dout(grp_fu_1917_p3)
);

mul_v2_mac_muladd_3ns_3ns_6ns_6_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
mac_muladd_3ns_3ns_6ns_6_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1926_p0),
    .din1(grp_fu_1926_p1),
    .din2(grp_fu_1909_p3),
    .ce(grp_fu_1926_ce),
    .dout(grp_fu_1926_p3)
);

mul_v2_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter4_stage0)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_846)) begin
        if ((icmp_ln87_fu_756_p2 == 1'd0)) begin
            indvar_flatten19_fu_198 <= add_ln87_1_fu_762_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten19_fu_198 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_846)) begin
        if ((icmp_ln87_fu_756_p2 == 1'd0)) begin
            indvar_flatten_fu_190 <= select_ln88_3_fu_844_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_190 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_844)) begin
            tx_fu_194 <= 3'd0;
        end else if (((icmp_ln87_reg_2035_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            tx_fu_194 <= select_ln87_1_fu_876_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_844)) begin
            ty_fu_186 <= 3'd0;
        end else if (((icmp_ln87_reg_2035_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            ty_fu_186 <= select_ln88_1_fu_929_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_846)) begin
        if ((icmp_ln87_fu_756_p2 == 1'd0)) begin
            tz_fu_182 <= add_ln89_fu_832_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            tz_fu_182 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        O_read_reg_1986 <= O;
        O_read_reg_1986_pp0_iter1_reg <= O_read_reg_1986;
        and_ln87_reg_2046_pp0_iter1_reg <= and_ln87_reg_2046;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_23_reg_1991 <= empty_23_fu_686_p1;
        empty_23_reg_1991_pp0_iter1_reg <= empty_23_reg_1991;
        empty_25_reg_1997 <= empty_25_fu_694_p1;
        empty_25_reg_1997_pp0_iter1_reg <= empty_25_reg_1997;
        empty_26_reg_2003 <= empty_26_fu_698_p1;
        empty_26_reg_2003_pp0_iter1_reg <= empty_26_reg_2003;
        empty_27_reg_2009 <= empty_27_fu_702_p1;
        empty_27_reg_2009_pp0_iter1_reg <= empty_27_reg_2009;
        empty_28_reg_2015 <= empty_28_fu_706_p1;
        empty_28_reg_2015_pp0_iter1_reg <= empty_28_reg_2015;
        ho_read_reg_1976 <= ho;
        ho_read_reg_1976_pp0_iter1_reg <= ho_read_reg_1976;
        icmp_ln87_reg_2035 <= icmp_ln87_fu_756_p2;
        icmp_ln87_reg_2035_pp0_iter1_reg <= icmp_ln87_reg_2035;
        icmp_ln88_reg_2039_pp0_iter1_reg <= icmp_ln88_reg_2039;
        mul_ln87_reg_2020 <= mul_ln87_fu_710_p2;
        mul_ln87_reg_2020_pp0_iter1_reg <= mul_ln87_reg_2020;
        mul_ln91_1_reg_2025 <= mul_ln91_1_fu_716_p2;
        mul_ln91_1_reg_2025_pp0_iter1_reg <= mul_ln91_1_reg_2025;
        mul_ln91_2_reg_2030 <= mul_ln91_2_fu_722_p2;
        mul_ln91_2_reg_2030_pp0_iter1_reg <= mul_ln91_2_reg_2030;
        trunc_ln91_reg_2052_pp0_iter1_reg <= trunc_ln91_reg_2052;
        wo_read_reg_1981 <= wo;
        wo_read_reg_1981_pp0_iter1_reg <= wo_read_reg_1981;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        O_read_reg_1986_pp0_iter2_reg <= O_read_reg_1986_pp0_iter1_reg;
        O_read_reg_1986_pp0_iter3_reg <= O_read_reg_1986_pp0_iter2_reg;
        O_read_reg_1986_pp0_iter4_reg <= O_read_reg_1986_pp0_iter3_reg;
        O_read_reg_1986_pp0_iter5_reg <= O_read_reg_1986_pp0_iter4_reg;
        O_read_reg_1986_pp0_iter6_reg <= O_read_reg_1986_pp0_iter5_reg;
        O_read_reg_1986_pp0_iter7_reg <= O_read_reg_1986_pp0_iter6_reg;
        O_read_reg_1986_pp0_iter8_reg <= O_read_reg_1986_pp0_iter7_reg;
        add_ln100_1_reg_2161 <= add_ln100_1_fu_1107_p2;
        add_ln100_1_reg_2161_pp0_iter6_reg <= add_ln100_1_reg_2161;
        add_ln100_2_reg_2171 <= add_ln100_2_fu_1111_p2;
        add_ln100_2_reg_2171_pp0_iter6_reg <= add_ln100_2_reg_2171;
        add_ln107_12_reg_2446 <= add_ln107_12_fu_1724_p2;
        add_ln107_2_reg_2462 <= add_ln107_2_fu_1828_p2;
        add_ln107_9_reg_2441 <= add_ln107_9_fu_1712_p2;
        add_ln91_1_reg_2095 <= add_ln91_1_fu_984_p2;
        add_ln91_1_reg_2095_pp0_iter6_reg <= add_ln91_1_reg_2095;
        and_ln87_reg_2046_pp0_iter2_reg <= and_ln87_reg_2046_pp0_iter1_reg;
        and_ln87_reg_2046_pp0_iter3_reg <= and_ln87_reg_2046_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_23_reg_1991_pp0_iter2_reg <= empty_23_reg_1991_pp0_iter1_reg;
        empty_23_reg_1991_pp0_iter3_reg <= empty_23_reg_1991_pp0_iter2_reg;
        empty_25_reg_1997_pp0_iter2_reg <= empty_25_reg_1997_pp0_iter1_reg;
        empty_25_reg_1997_pp0_iter3_reg <= empty_25_reg_1997_pp0_iter2_reg;
        empty_26_reg_2003_pp0_iter2_reg <= empty_26_reg_2003_pp0_iter1_reg;
        empty_26_reg_2003_pp0_iter3_reg <= empty_26_reg_2003_pp0_iter2_reg;
        empty_28_reg_2015_pp0_iter2_reg <= empty_28_reg_2015_pp0_iter1_reg;
        empty_28_reg_2015_pp0_iter3_reg <= empty_28_reg_2015_pp0_iter2_reg;
        empty_28_reg_2015_pp0_iter4_reg <= empty_28_reg_2015_pp0_iter3_reg;
        gmem_addr_reg_2456 <= sext_ln91_fu_1786_p1;
        ho_read_reg_1976_pp0_iter2_reg <= ho_read_reg_1976_pp0_iter1_reg;
        ho_read_reg_1976_pp0_iter3_reg <= ho_read_reg_1976_pp0_iter2_reg;
        ho_read_reg_1976_pp0_iter4_reg <= ho_read_reg_1976_pp0_iter3_reg;
        ho_read_reg_1976_pp0_iter5_reg <= ho_read_reg_1976_pp0_iter4_reg;
        ho_read_reg_1976_pp0_iter6_reg <= ho_read_reg_1976_pp0_iter5_reg;
        ho_read_reg_1976_pp0_iter7_reg <= ho_read_reg_1976_pp0_iter6_reg;
        ho_read_reg_1976_pp0_iter8_reg <= ho_read_reg_1976_pp0_iter7_reg;
        icmp_ln87_reg_2035_pp0_iter2_reg <= icmp_ln87_reg_2035_pp0_iter1_reg;
        icmp_ln87_reg_2035_pp0_iter3_reg <= icmp_ln87_reg_2035_pp0_iter2_reg;
        icmp_ln88_reg_2039_pp0_iter2_reg <= icmp_ln88_reg_2039_pp0_iter1_reg;
        icmp_ln88_reg_2039_pp0_iter3_reg <= icmp_ln88_reg_2039_pp0_iter2_reg;
        mul_ln87_reg_2020_pp0_iter2_reg <= mul_ln87_reg_2020_pp0_iter1_reg;
        mul_ln87_reg_2020_pp0_iter3_reg <= mul_ln87_reg_2020_pp0_iter2_reg;
        mul_ln87_reg_2020_pp0_iter4_reg <= mul_ln87_reg_2020_pp0_iter3_reg;
        mul_ln91_1_reg_2025_pp0_iter2_reg <= mul_ln91_1_reg_2025_pp0_iter1_reg;
        mul_ln91_1_reg_2025_pp0_iter3_reg <= mul_ln91_1_reg_2025_pp0_iter2_reg;
        mul_ln91_2_reg_2030_pp0_iter2_reg <= mul_ln91_2_reg_2030_pp0_iter1_reg;
        mul_ln91_2_reg_2030_pp0_iter3_reg <= mul_ln91_2_reg_2030_pp0_iter2_reg;
        mul_ln91_2_reg_2030_pp0_iter4_reg <= mul_ln91_2_reg_2030_pp0_iter3_reg;
        mul_ln91_3_reg_2108 <= mul_ln91_3_fu_1009_p2;
        mul_ln91_3_reg_2108_pp0_iter6_reg <= mul_ln91_3_reg_2108;
        select_ln87_1_reg_2063_pp0_iter3_reg <= select_ln87_1_reg_2063;
        select_ln87_1_reg_2063_pp0_iter4_reg <= select_ln87_1_reg_2063_pp0_iter3_reg;
        select_ln87_1_reg_2063_pp0_iter5_reg <= select_ln87_1_reg_2063_pp0_iter4_reg;
        select_ln87_1_reg_2063_pp0_iter6_reg <= select_ln87_1_reg_2063_pp0_iter5_reg;
        select_ln87_1_reg_2063_pp0_iter7_reg <= select_ln87_1_reg_2063_pp0_iter6_reg;
        select_ln87_1_reg_2063_pp0_iter8_reg <= select_ln87_1_reg_2063_pp0_iter7_reg;
        select_ln88_1_reg_2073_pp0_iter5_reg <= select_ln88_1_reg_2073;
        select_ln88_1_reg_2073_pp0_iter6_reg <= select_ln88_1_reg_2073_pp0_iter5_reg;
        select_ln88_1_reg_2073_pp0_iter7_reg <= select_ln88_1_reg_2073_pp0_iter6_reg;
        select_ln88_1_reg_2073_pp0_iter8_reg <= select_ln88_1_reg_2073_pp0_iter7_reg;
        trunc_ln104_1_reg_2421 <= trunc_ln104_1_fu_1622_p1;
        trunc_ln104_reg_2416 <= trunc_ln104_fu_1618_p1;
        trunc_ln91_reg_2052_pp0_iter2_reg <= trunc_ln91_reg_2052_pp0_iter1_reg;
        trunc_ln91_reg_2052_pp0_iter3_reg <= trunc_ln91_reg_2052_pp0_iter2_reg;
        trunc_ln91_reg_2052_pp0_iter4_reg <= trunc_ln91_reg_2052_pp0_iter3_reg;
        trunc_ln91_reg_2052_pp0_iter5_reg <= trunc_ln91_reg_2052_pp0_iter4_reg;
        trunc_ln91_reg_2052_pp0_iter6_reg <= trunc_ln91_reg_2052_pp0_iter5_reg;
        trunc_ln91_reg_2052_pp0_iter7_reg <= trunc_ln91_reg_2052_pp0_iter6_reg;
        trunc_ln91_reg_2052_pp0_iter8_reg <= trunc_ln91_reg_2052_pp0_iter7_reg;
        wo_read_reg_1981_pp0_iter2_reg <= wo_read_reg_1981_pp0_iter1_reg;
        wo_read_reg_1981_pp0_iter3_reg <= wo_read_reg_1981_pp0_iter2_reg;
        wo_read_reg_1981_pp0_iter4_reg <= wo_read_reg_1981_pp0_iter3_reg;
        wo_read_reg_1981_pp0_iter5_reg <= wo_read_reg_1981_pp0_iter4_reg;
        wo_read_reg_1981_pp0_iter6_reg <= wo_read_reg_1981_pp0_iter5_reg;
        wo_read_reg_1981_pp0_iter7_reg <= wo_read_reg_1981_pp0_iter6_reg;
        wo_read_reg_1981_pp0_iter8_reg <= wo_read_reg_1981_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_756_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln87_reg_2046 <= and_ln87_fu_792_p2;
        icmp_ln88_reg_2039 <= icmp_ln88_fu_774_p2;
        trunc_ln91_reg_2052 <= trunc_ln91_fu_812_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_reg_2035_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln87_1_reg_2063 <= select_ln87_1_fu_876_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_reg_2035_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln88_1_reg_2073 <= select_ln88_1_fu_929_p3;
        select_ln88_2_reg_2078 <= select_ln88_2_fu_950_p3;
        urem_ln91_reg_2090 <= grp_fu_826_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_756_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_reg_2035_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten19_load = 6'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten19_load = indvar_flatten19_fu_198;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_190;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_tz_load = 2'd0;
    end else begin
        ap_sig_allocacmp_tz_load = tz_fu_182;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1838_ce = 1'b1;
    end else begin
        grp_fu_1838_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1846_ce = 1'b1;
    end else begin
        grp_fu_1846_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1855_ce = 1'b1;
    end else begin
        grp_fu_1855_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1864_ce = 1'b1;
    end else begin
        grp_fu_1864_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1873_ce = 1'b1;
    end else begin
        grp_fu_1873_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1882_ce = 1'b1;
    end else begin
        grp_fu_1882_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1891_ce = 1'b1;
    end else begin
        grp_fu_1891_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1900_ce = 1'b1;
    end else begin
        grp_fu_1900_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1909_ce = 1'b1;
    end else begin
        grp_fu_1909_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1917_ce = 1'b1;
    end else begin
        grp_fu_1917_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1926_ce = 1'b1;
    end else begin
        grp_fu_1926_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_756_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_820_ap_start = 1'b1;
    end else begin
        grp_fu_820_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_820_ce = 1'b1;
    end else begin
        grp_fu_820_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln87_fu_756_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_826_ap_start = 1'b1;
    end else begin
        grp_fu_826_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_826_ce = 1'b1;
    end else begin
        grp_fu_826_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce0 = 1'b1;
    end else begin
        mul_v2_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce1 = 1'b1;
    end else begin
        mul_v2_I_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce10 = 1'b1;
    end else begin
        mul_v2_I_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce11 = 1'b1;
    end else begin
        mul_v2_I_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce12 = 1'b1;
    end else begin
        mul_v2_I_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce13 = 1'b1;
    end else begin
        mul_v2_I_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce14 = 1'b1;
    end else begin
        mul_v2_I_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce15 = 1'b1;
    end else begin
        mul_v2_I_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce16 = 1'b1;
    end else begin
        mul_v2_I_ce16 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce2 = 1'b1;
    end else begin
        mul_v2_I_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce3 = 1'b1;
    end else begin
        mul_v2_I_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce4 = 1'b1;
    end else begin
        mul_v2_I_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce5 = 1'b1;
    end else begin
        mul_v2_I_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce6 = 1'b1;
    end else begin
        mul_v2_I_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce7 = 1'b1;
    end else begin
        mul_v2_I_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce8 = 1'b1;
    end else begin
        mul_v2_I_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_I_ce9 = 1'b1;
    end else begin
        mul_v2_I_ce9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce0 = 1'b1;
    end else begin
        mul_v2_filter_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce1 = 1'b1;
    end else begin
        mul_v2_filter_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce10 = 1'b1;
    end else begin
        mul_v2_filter_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce11 = 1'b1;
    end else begin
        mul_v2_filter_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce12 = 1'b1;
    end else begin
        mul_v2_filter_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce13 = 1'b1;
    end else begin
        mul_v2_filter_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce14 = 1'b1;
    end else begin
        mul_v2_filter_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce15 = 1'b1;
    end else begin
        mul_v2_filter_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce16 = 1'b1;
    end else begin
        mul_v2_filter_ce16 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce2 = 1'b1;
    end else begin
        mul_v2_filter_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce3 = 1'b1;
    end else begin
        mul_v2_filter_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce4 = 1'b1;
    end else begin
        mul_v2_filter_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce5 = 1'b1;
    end else begin
        mul_v2_filter_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce6 = 1'b1;
    end else begin
        mul_v2_filter_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce7 = 1'b1;
    end else begin
        mul_v2_filter_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce8 = 1'b1;
    end else begin
        mul_v2_filter_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_v2_filter_ce9 = 1'b1;
    end else begin
        mul_v2_filter_ce9 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_1_fu_1107_p0 = grp_fu_1846_p4;

assign add_ln100_1_fu_1107_p2 = ($signed(add_ln100_1_fu_1107_p0) + $signed(select_ln88_2_reg_2078));

assign add_ln100_2_fu_1111_p2 = (mul_ln91_3_fu_1009_p2 + mul_ln87_reg_2020_pp0_iter4_reg);

assign add_ln102_1_fu_1410_p2 = (add_ln100_2_reg_2171_pp0_iter6_reg + 6'd1);

assign add_ln102_fu_1400_p2 = (add_ln100_1_reg_2161_pp0_iter6_reg + 8'd1);

assign add_ln103_1_fu_1127_p2 = (add_ln100_2_fu_1111_p2 + 6'd2);

assign add_ln103_fu_1116_p2 = (add_ln100_1_fu_1107_p2 + 8'd2);

assign add_ln104_1_fu_1430_p2 = (add_ln100_2_reg_2171_pp0_iter6_reg + 6'd3);

assign add_ln104_fu_1420_p2 = (add_ln100_1_reg_2161_pp0_iter6_reg + 8'd3);

assign add_ln105_1_fu_1266_p2 = (add_ln100_2_reg_2171 + 6'd4);

assign add_ln105_fu_1256_p2 = (add_ln100_1_reg_2161 + 8'd4);

assign add_ln106_1_fu_1286_p2 = (add_ln100_2_reg_2171 + 6'd5);

assign add_ln106_fu_1276_p2 = (add_ln100_1_reg_2161 + 8'd5);

assign add_ln107_12_fu_1724_p2 = (zext_ln107_12_fu_1721_p1 + zext_ln107_11_fu_1718_p1);

assign add_ln107_16_fu_1808_p2 = (zext_ln107_15_fu_1805_p1 + zext_ln107_14_fu_1802_p1);

assign add_ln107_17_fu_1818_p2 = (zext_ln107_16_fu_1814_p1 + zext_ln107_13_fu_1799_p1);

assign add_ln107_1_fu_1482_p2 = (add_ln100_2_reg_2171_pp0_iter6_reg + 6'd6);

assign add_ln107_2_fu_1828_p2 = (zext_ln107_17_fu_1824_p1 + zext_ln107_10_fu_1796_p1);

assign add_ln107_5_fu_1686_p2 = (zext_ln107_5_fu_1683_p1 + zext_ln107_4_fu_1680_p1);

assign add_ln107_8_fu_1702_p2 = (zext_ln107_8_fu_1699_p1 + zext_ln107_7_fu_1696_p1);

assign add_ln107_9_fu_1712_p2 = (zext_ln107_9_fu_1708_p1 + zext_ln107_6_fu_1692_p1);

assign add_ln107_fu_1472_p2 = (add_ln100_1_reg_2161_pp0_iter6_reg + 8'd6);

assign add_ln108_1_fu_1149_p2 = (add_ln100_2_fu_1111_p2 + 6'd7);

assign add_ln108_fu_1138_p2 = (add_ln100_1_fu_1107_p2 + 8'd7);

assign add_ln87_1_fu_762_p2 = (ap_sig_allocacmp_indvar_flatten19_load + 6'd1);

assign add_ln87_2_fu_870_p2 = (tx_fu_194 + 3'd1);

assign add_ln88_1_fu_838_p2 = (ap_sig_allocacmp_indvar_flatten_load + 5'd1);

assign add_ln89_fu_832_p2 = (select_ln88_fu_804_p3 + 2'd1);

assign add_ln91_1_fu_984_p0 = grp_fu_1838_p3;

assign add_ln91_1_fu_984_p2 = ($signed(add_ln91_1_fu_984_p0) + $signed(select_ln88_2_reg_2078));

assign add_ln91_2_fu_1753_p2 = (tmp1_fu_1748_p2 + zext_ln87_fu_1662_p1);

assign add_ln91_3_fu_1771_p2 = (zext_ln91_6_fu_1767_p1 + O_read_reg_1986_pp0_iter8_reg);

assign add_ln92_1_fu_1322_p2 = (mul_ln91_3_reg_2108_pp0_iter6_reg + 6'd1);

assign add_ln92_fu_1312_p2 = (add_ln91_1_reg_2095_pp0_iter6_reg + 8'd1);

assign add_ln93_1_fu_1342_p2 = (mul_ln91_3_reg_2108_pp0_iter6_reg + 6'd2);

assign add_ln93_fu_1332_p2 = (add_ln91_1_reg_2095_pp0_iter6_reg + 8'd2);

assign add_ln94_1_fu_1030_p2 = (mul_ln91_3_fu_1009_p2 + 6'd3);

assign add_ln94_fu_1019_p2 = (add_ln91_1_fu_984_p2 + 8'd3);

assign add_ln95_1_fu_1362_p2 = (mul_ln91_3_reg_2108_pp0_iter6_reg + 6'd4);

assign add_ln95_fu_1352_p2 = (add_ln91_1_reg_2095_pp0_iter6_reg + 8'd4);

assign add_ln96_1_fu_1052_p2 = (mul_ln91_3_fu_1009_p2 + 6'd5);

assign add_ln96_fu_1041_p2 = (add_ln91_1_fu_984_p2 + 8'd5);

assign add_ln97_1_fu_1382_p2 = (mul_ln91_3_reg_2108_pp0_iter6_reg + 6'd6);

assign add_ln97_fu_1372_p2 = (add_ln91_1_reg_2095_pp0_iter6_reg + 8'd6);

assign add_ln98_1_fu_1074_p2 = (mul_ln91_3_fu_1009_p2 + 6'd7);

assign add_ln98_fu_1063_p2 = (add_ln91_1_fu_984_p2 + 8'd7);

assign add_ln99_1_fu_1096_p2 = (mul_ln91_3_fu_1009_p2 + 6'd8);

assign add_ln99_fu_1085_p2 = (add_ln91_1_fu_984_p2 + 8'd8);

assign and_ln87_fu_792_p2 = (xor_ln87_fu_780_p2 & icmp_ln89_fu_786_p2);

assign and_ln91_2_fu_1737_p2 = (select_ln91_2_fu_1730_p3 & ho_read_reg_1976_pp0_iter8_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter16 == 1'b1) & (gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter16 == 1'b1) & (gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (gmem_WREADY == 1'b0)) | ((gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter16 == 1'b1) & (gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter11 == 1'b1) & (gmem_WREADY == 1'b0)) | ((gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage0_iter16 = (gmem_BVALID == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_844 = ((ap_loop_init == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_846 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_23_fu_686_p1 = hi[7:0];

assign empty_25_fu_694_p1 = s[7:0];

assign empty_26_fu_698_p1 = wk[7:0];

assign empty_27_fu_702_p1 = wi[7:0];

assign empty_28_fu_706_p1 = wk[5:0];

assign factor1_fu_1648_p0 = factor1_fu_1648_p00;

assign factor1_fu_1648_p00 = trunc_ln100_fu_1580_p1;

assign factor1_fu_1648_p1 = factor1_fu_1648_p10;

assign factor1_fu_1648_p10 = trunc_ln102_fu_1588_p1;

assign gmem_WDATA = add_ln107_2_reg_2462;

assign grp_fu_1838_p0 = zext_ln87_1_fu_883_p1;

assign grp_fu_1846_p0 = zext_ln87_1_fu_883_p1;

assign grp_fu_1855_p0 = grp_fu_1855_p00;

assign grp_fu_1855_p00 = trunc_ln91_5_fu_1168_p1;

assign grp_fu_1855_p1 = grp_fu_1855_p10;

assign grp_fu_1855_p10 = trunc_ln91_3_fu_1160_p1;

assign grp_fu_1864_p0 = grp_fu_1864_p00;

assign grp_fu_1864_p00 = trunc_ln94_1_fu_1184_p1;

assign grp_fu_1864_p1 = grp_fu_1864_p10;

assign grp_fu_1864_p10 = trunc_ln94_fu_1176_p1;

assign grp_fu_1873_p0 = grp_fu_1873_p00;

assign grp_fu_1873_p00 = trunc_ln96_1_fu_1200_p1;

assign grp_fu_1873_p1 = grp_fu_1873_p10;

assign grp_fu_1873_p10 = trunc_ln96_fu_1192_p1;

assign grp_fu_1882_p0 = grp_fu_1882_p00;

assign grp_fu_1882_p00 = trunc_ln98_1_fu_1216_p1;

assign grp_fu_1882_p1 = grp_fu_1882_p10;

assign grp_fu_1882_p10 = trunc_ln98_fu_1208_p1;

assign grp_fu_1891_p0 = grp_fu_1891_p00;

assign grp_fu_1891_p00 = trunc_ln99_1_fu_1232_p1;

assign grp_fu_1891_p1 = grp_fu_1891_p10;

assign grp_fu_1891_p10 = trunc_ln99_fu_1224_p1;

assign grp_fu_1891_p2 = {{factor1_fu_1648_p2}, {1'd0}};

assign grp_fu_1900_p0 = grp_fu_1900_p00;

assign grp_fu_1900_p00 = trunc_ln103_1_fu_1248_p1;

assign grp_fu_1900_p1 = grp_fu_1900_p10;

assign grp_fu_1900_p10 = trunc_ln103_fu_1240_p1;

assign grp_fu_1909_p0 = grp_fu_1909_p00;

assign grp_fu_1909_p00 = trunc_ln108_1_fu_1304_p1;

assign grp_fu_1909_p1 = grp_fu_1909_p10;

assign grp_fu_1909_p10 = trunc_ln108_fu_1296_p1;

assign grp_fu_1917_p0 = grp_fu_1917_p00;

assign grp_fu_1917_p00 = trunc_ln105_1_fu_1448_p1;

assign grp_fu_1917_p1 = grp_fu_1917_p10;

assign grp_fu_1917_p10 = trunc_ln105_fu_1440_p1;

assign grp_fu_1926_p0 = grp_fu_1926_p00;

assign grp_fu_1926_p00 = trunc_ln106_1_fu_1464_p1;

assign grp_fu_1926_p1 = grp_fu_1926_p10;

assign grp_fu_1926_p10 = trunc_ln106_fu_1456_p1;

assign grp_fu_820_p0 = zext_ln91_2_fu_816_p1;

assign grp_fu_826_p0 = zext_ln91_2_fu_816_p1;

assign icmp_ln87_fu_756_p2 = ((ap_sig_allocacmp_indvar_flatten19_load == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_774_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 5'd10) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_786_p2 = ((ap_sig_allocacmp_tz_load == 2'd2) ? 1'b1 : 1'b0);

assign mul_ln102_fu_1612_p0 = mul_ln102_fu_1612_p00;

assign mul_ln102_fu_1612_p00 = trunc_ln102_2_fu_1604_p1;

assign mul_ln102_fu_1612_p1 = mul_ln102_fu_1612_p10;

assign mul_ln102_fu_1612_p10 = trunc_ln102_1_fu_1596_p1;

assign mul_ln104_fu_1674_p0 = mul_ln104_fu_1674_p00;

assign mul_ln104_fu_1674_p00 = trunc_ln104_1_reg_2421;

assign mul_ln104_fu_1674_p1 = mul_ln104_fu_1674_p10;

assign mul_ln104_fu_1674_p10 = trunc_ln104_reg_2416;

assign mul_ln107_fu_1642_p0 = mul_ln107_fu_1642_p00;

assign mul_ln107_fu_1642_p00 = trunc_ln107_1_fu_1634_p1;

assign mul_ln107_fu_1642_p1 = mul_ln107_fu_1642_p10;

assign mul_ln107_fu_1642_p10 = trunc_ln107_fu_1626_p1;

assign mul_ln91_1_fu_716_p0 = wi[7:0];

assign mul_ln91_1_fu_716_p1 = ci[7:0];

assign mul_ln91_2_fu_722_p0 = ci[5:0];

assign mul_ln91_3_fu_1009_p0 = (select_ln91_1_fu_996_p3 & empty_28_reg_2015_pp0_iter4_reg);

assign mul_ln91_fu_974_p0 = (select_ln91_fu_961_p3 & empty_23_reg_1991_pp0_iter3_reg);

assign mul_ln92_fu_1508_p0 = mul_ln92_fu_1508_p00;

assign mul_ln92_fu_1508_p00 = trunc_ln92_1_fu_1500_p1;

assign mul_ln92_fu_1508_p1 = mul_ln92_fu_1508_p10;

assign mul_ln92_fu_1508_p10 = trunc_ln92_fu_1492_p1;

assign mul_ln93_fu_1530_p0 = mul_ln93_fu_1530_p00;

assign mul_ln93_fu_1530_p00 = trunc_ln93_1_fu_1522_p1;

assign mul_ln93_fu_1530_p1 = mul_ln93_fu_1530_p10;

assign mul_ln93_fu_1530_p10 = trunc_ln93_fu_1514_p1;

assign mul_ln95_fu_1552_p0 = mul_ln95_fu_1552_p00;

assign mul_ln95_fu_1552_p00 = trunc_ln95_1_fu_1544_p1;

assign mul_ln95_fu_1552_p1 = mul_ln95_fu_1552_p10;

assign mul_ln95_fu_1552_p10 = trunc_ln95_fu_1536_p1;

assign mul_ln97_fu_1574_p0 = mul_ln97_fu_1574_p00;

assign mul_ln97_fu_1574_p00 = trunc_ln97_1_fu_1566_p1;

assign mul_ln97_fu_1574_p1 = mul_ln97_fu_1574_p10;

assign mul_ln97_fu_1574_p10 = trunc_ln97_fu_1558_p1;

assign mul_v2_I_address0 = zext_ln107_fu_1477_p1;

assign mul_v2_I_address1 = zext_ln104_fu_1425_p1;

assign mul_v2_I_address10 = zext_ln108_fu_1144_p1;

assign mul_v2_I_address11 = zext_ln103_fu_1122_p1;

assign mul_v2_I_address12 = zext_ln99_fu_1091_p1;

assign mul_v2_I_address13 = zext_ln98_fu_1069_p1;

assign mul_v2_I_address14 = zext_ln96_fu_1047_p1;

assign mul_v2_I_address15 = zext_ln94_fu_1025_p1;

assign mul_v2_I_address16 = zext_ln91_fu_988_p1;

assign mul_v2_I_address2 = zext_ln102_fu_1405_p1;

assign mul_v2_I_address3 = zext_ln100_fu_1392_p1;

assign mul_v2_I_address4 = zext_ln97_fu_1377_p1;

assign mul_v2_I_address5 = zext_ln95_fu_1357_p1;

assign mul_v2_I_address6 = zext_ln93_fu_1337_p1;

assign mul_v2_I_address7 = zext_ln92_fu_1317_p1;

assign mul_v2_I_address8 = zext_ln106_fu_1281_p1;

assign mul_v2_I_address9 = zext_ln105_fu_1261_p1;

assign mul_v2_filter_address0 = zext_ln107_1_fu_1487_p1;

assign mul_v2_filter_address1 = zext_ln104_1_fu_1435_p1;

assign mul_v2_filter_address10 = zext_ln108_1_fu_1155_p1;

assign mul_v2_filter_address11 = zext_ln103_1_fu_1133_p1;

assign mul_v2_filter_address12 = zext_ln99_1_fu_1102_p1;

assign mul_v2_filter_address13 = zext_ln98_1_fu_1080_p1;

assign mul_v2_filter_address14 = zext_ln96_1_fu_1058_p1;

assign mul_v2_filter_address15 = zext_ln94_1_fu_1036_p1;

assign mul_v2_filter_address16 = zext_ln91_1_fu_1014_p1;

assign mul_v2_filter_address2 = zext_ln102_1_fu_1415_p1;

assign mul_v2_filter_address3 = zext_ln100_1_fu_1396_p1;

assign mul_v2_filter_address4 = zext_ln97_1_fu_1387_p1;

assign mul_v2_filter_address5 = zext_ln95_1_fu_1367_p1;

assign mul_v2_filter_address6 = zext_ln93_1_fu_1347_p1;

assign mul_v2_filter_address7 = zext_ln92_1_fu_1327_p1;

assign mul_v2_filter_address8 = zext_ln106_1_fu_1291_p1;

assign mul_v2_filter_address9 = zext_ln105_1_fu_1271_p1;

assign or_ln88_fu_798_p2 = (icmp_ln88_fu_774_p2 | and_ln87_fu_792_p2);

assign select_ln87_1_fu_876_p3 = ((icmp_ln88_reg_2039_pp0_iter1_reg[0:0] == 1'b1) ? add_ln87_2_fu_870_p2 : tx_fu_194);

assign select_ln87_2_fu_916_p3 = ((icmp_ln88_reg_2039_pp0_iter3_reg[0:0] == 1'b1) ? 8'd0 : mul10_fu_904_p2);

assign select_ln87_fu_909_p3 = ((icmp_ln88_reg_2039_pp0_iter3_reg[0:0] == 1'b1) ? 3'd0 : ty_fu_186);

assign select_ln88_1_cast_fu_1665_p1 = select_ln88_1_reg_2073_pp0_iter8_reg;

assign select_ln88_1_fu_929_p3 = ((and_ln87_reg_2046_pp0_iter3_reg[0:0] == 1'b1) ? ty_3_fu_923_p2 : select_ln87_fu_909_p3);

assign select_ln88_2_fu_950_p3 = ((and_ln87_reg_2046_pp0_iter3_reg[0:0] == 1'b1) ? mul10_mid1_fu_945_p2 : select_ln87_2_fu_916_p3);

assign select_ln88_3_fu_844_p3 = ((icmp_ln88_fu_774_p2[0:0] == 1'b1) ? 5'd1 : add_ln88_1_fu_838_p2);

assign select_ln88_fu_804_p3 = ((or_ln88_fu_798_p2[0:0] == 1'b1) ? 2'd0 : ap_sig_allocacmp_tz_load);

assign select_ln91_1_fu_996_p3 = ((trunc_ln91_4_fu_993_p1[0:0] == 1'b1) ? 6'd63 : 6'd0);

assign select_ln91_2_fu_1730_p3 = ((trunc_ln91_reg_2052_pp0_iter8_reg[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln91_fu_961_p3 = ((trunc_ln91_2_fu_957_p1[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign sext_ln91_fu_1786_p1 = $signed(trunc_ln91_1_fu_1776_p4);

assign shl_ln_fu_1759_p3 = {{add_ln91_2_fu_1753_p2}, {2'd0}};

assign tmp1_fu_1748_p0 = (and_ln91_2_fu_1737_p2 + select_ln88_1_cast_fu_1665_p1);

assign tmp4_fu_899_p0 = tmp4_fu_899_p00;

assign tmp4_fu_899_p00 = ty_fu_186;

assign tmp4_mid1_fu_940_p0 = tmp4_mid1_fu_940_p00;

assign tmp4_mid1_fu_940_p00 = ty_3_fu_923_p2;

assign trunc_ln100_fu_1580_p1 = mul_v2_I_q3[2:0];

assign trunc_ln102_1_fu_1596_p1 = mul_v2_I_q2[2:0];

assign trunc_ln102_2_fu_1604_p1 = mul_v2_filter_q2[2:0];

assign trunc_ln102_fu_1588_p1 = mul_v2_filter_q3[2:0];

assign trunc_ln103_1_fu_1248_p1 = mul_v2_filter_q11[2:0];

assign trunc_ln103_fu_1240_p1 = mul_v2_I_q11[2:0];

assign trunc_ln104_1_fu_1622_p1 = mul_v2_filter_q1[2:0];

assign trunc_ln104_fu_1618_p1 = mul_v2_I_q1[2:0];

assign trunc_ln105_1_fu_1448_p1 = mul_v2_filter_q9[2:0];

assign trunc_ln105_fu_1440_p1 = mul_v2_I_q9[2:0];

assign trunc_ln106_1_fu_1464_p1 = mul_v2_filter_q8[2:0];

assign trunc_ln106_fu_1456_p1 = mul_v2_I_q8[2:0];

assign trunc_ln107_1_fu_1634_p1 = mul_v2_filter_q0[2:0];

assign trunc_ln107_fu_1626_p1 = mul_v2_I_q0[2:0];

assign trunc_ln108_1_fu_1304_p1 = mul_v2_filter_q10[2:0];

assign trunc_ln108_fu_1296_p1 = mul_v2_I_q10[2:0];

assign trunc_ln91_1_fu_1776_p4 = {{add_ln91_3_fu_1771_p2[63:2]}};

assign trunc_ln91_2_fu_957_p1 = grp_fu_820_p2[0:0];

assign trunc_ln91_3_fu_1160_p1 = mul_v2_I_q16[2:0];

assign trunc_ln91_4_fu_993_p1 = urem_ln91_reg_2090[0:0];

assign trunc_ln91_5_fu_1168_p1 = mul_v2_filter_q16[2:0];

assign trunc_ln91_fu_812_p1 = select_ln88_fu_804_p3[0:0];

assign trunc_ln92_1_fu_1500_p1 = mul_v2_filter_q7[2:0];

assign trunc_ln92_fu_1492_p1 = mul_v2_I_q7[2:0];

assign trunc_ln93_1_fu_1522_p1 = mul_v2_filter_q6[2:0];

assign trunc_ln93_fu_1514_p1 = mul_v2_I_q6[2:0];

assign trunc_ln94_1_fu_1184_p1 = mul_v2_filter_q15[2:0];

assign trunc_ln94_fu_1176_p1 = mul_v2_I_q15[2:0];

assign trunc_ln95_1_fu_1544_p1 = mul_v2_filter_q5[2:0];

assign trunc_ln95_fu_1536_p1 = mul_v2_I_q5[2:0];

assign trunc_ln96_1_fu_1200_p1 = mul_v2_filter_q14[2:0];

assign trunc_ln96_fu_1192_p1 = mul_v2_I_q14[2:0];

assign trunc_ln97_1_fu_1566_p1 = mul_v2_filter_q4[2:0];

assign trunc_ln97_fu_1558_p1 = mul_v2_I_q4[2:0];

assign trunc_ln98_1_fu_1216_p1 = mul_v2_filter_q13[2:0];

assign trunc_ln98_fu_1208_p1 = mul_v2_I_q13[2:0];

assign trunc_ln99_1_fu_1232_p1 = mul_v2_filter_q12[2:0];

assign trunc_ln99_fu_1224_p1 = mul_v2_I_q12[2:0];

assign ty_3_fu_923_p2 = (select_ln87_fu_909_p3 + 3'd1);

assign xor_ln87_fu_780_p2 = (icmp_ln88_fu_774_p2 ^ 1'd1);

assign zext_ln100_1_fu_1396_p1 = add_ln100_2_reg_2171_pp0_iter6_reg;

assign zext_ln100_fu_1392_p1 = add_ln100_1_reg_2161_pp0_iter6_reg;

assign zext_ln102_1_fu_1415_p1 = add_ln102_1_fu_1410_p2;

assign zext_ln102_fu_1405_p1 = add_ln102_fu_1400_p2;

assign zext_ln103_1_fu_1133_p1 = add_ln103_1_fu_1127_p2;

assign zext_ln103_fu_1122_p1 = add_ln103_fu_1116_p2;

assign zext_ln104_1_fu_1435_p1 = add_ln104_1_fu_1430_p2;

assign zext_ln104_fu_1425_p1 = add_ln104_fu_1420_p2;

assign zext_ln105_1_fu_1271_p1 = add_ln105_1_fu_1266_p2;

assign zext_ln105_fu_1261_p1 = add_ln105_fu_1256_p2;

assign zext_ln106_1_fu_1291_p1 = add_ln106_1_fu_1286_p2;

assign zext_ln106_fu_1281_p1 = add_ln106_fu_1276_p2;

assign zext_ln107_10_fu_1796_p1 = add_ln107_9_reg_2441;

assign zext_ln107_11_fu_1718_p1 = grp_fu_1891_p3;

assign zext_ln107_12_fu_1721_p1 = grp_fu_1900_p3;

assign zext_ln107_13_fu_1799_p1 = add_ln107_12_reg_2446;

assign zext_ln107_14_fu_1802_p1 = grp_fu_1917_p3;

assign zext_ln107_15_fu_1805_p1 = grp_fu_1926_p3;

assign zext_ln107_16_fu_1814_p1 = add_ln107_16_fu_1808_p2;

assign zext_ln107_17_fu_1824_p1 = add_ln107_17_fu_1818_p2;

assign zext_ln107_1_fu_1487_p1 = add_ln107_1_fu_1482_p2;

assign zext_ln107_4_fu_1680_p1 = grp_fu_1855_p3;

assign zext_ln107_5_fu_1683_p1 = grp_fu_1864_p3;

assign zext_ln107_6_fu_1692_p1 = add_ln107_5_fu_1686_p2;

assign zext_ln107_7_fu_1696_p1 = grp_fu_1873_p3;

assign zext_ln107_8_fu_1699_p1 = grp_fu_1882_p3;

assign zext_ln107_9_fu_1708_p1 = add_ln107_8_fu_1702_p2;

assign zext_ln107_fu_1477_p1 = add_ln107_fu_1472_p2;

assign zext_ln108_1_fu_1155_p1 = add_ln108_1_fu_1149_p2;

assign zext_ln108_fu_1144_p1 = add_ln108_fu_1138_p2;

assign zext_ln87_1_fu_883_p1 = select_ln87_1_fu_876_p3;

assign zext_ln87_fu_1662_p1 = select_ln87_1_reg_2063_pp0_iter8_reg;

assign zext_ln91_1_fu_1014_p1 = mul_ln91_3_fu_1009_p2;

assign zext_ln91_2_fu_816_p1 = trunc_ln91_fu_812_p1;

assign zext_ln91_6_fu_1767_p1 = shl_ln_fu_1759_p3;

assign zext_ln91_fu_988_p1 = add_ln91_1_fu_984_p2;

assign zext_ln92_1_fu_1327_p1 = add_ln92_1_fu_1322_p2;

assign zext_ln92_fu_1317_p1 = add_ln92_fu_1312_p2;

assign zext_ln93_1_fu_1347_p1 = add_ln93_1_fu_1342_p2;

assign zext_ln93_fu_1337_p1 = add_ln93_fu_1332_p2;

assign zext_ln94_1_fu_1036_p1 = add_ln94_1_fu_1030_p2;

assign zext_ln94_fu_1025_p1 = add_ln94_fu_1019_p2;

assign zext_ln95_1_fu_1367_p1 = add_ln95_1_fu_1362_p2;

assign zext_ln95_fu_1357_p1 = add_ln95_fu_1352_p2;

assign zext_ln96_1_fu_1058_p1 = add_ln96_1_fu_1052_p2;

assign zext_ln96_fu_1047_p1 = add_ln96_fu_1041_p2;

assign zext_ln97_1_fu_1387_p1 = add_ln97_1_fu_1382_p2;

assign zext_ln97_fu_1377_p1 = add_ln97_fu_1372_p2;

assign zext_ln98_1_fu_1080_p1 = add_ln98_1_fu_1074_p2;

assign zext_ln98_fu_1069_p1 = add_ln98_fu_1063_p2;

assign zext_ln99_1_fu_1102_p1 = add_ln99_1_fu_1096_p2;

assign zext_ln99_fu_1091_p1 = add_ln99_fu_1085_p2;

endmodule //mul_v2
